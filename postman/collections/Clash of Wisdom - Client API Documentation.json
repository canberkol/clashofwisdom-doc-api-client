{
	"info": {
		"_postman_id": "032f05e9-538e-47ad-9bbf-d74f74087dfa",
		"name": "Clash of Wisdom - Client API Documentation",
		"description": "Clash of Wisdom is a PvP trivia game created by Ravio Games. This documentation provides information only for developers who are building functionality in iOS, Android and other channels.\n\nContact Support:\n Name: Raviosoft, A.Åž.\n Email: info@raviosoft.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3114939-032f05e9-538e-47ad-9bbf-d74f74087dfa"
	},
	"item": [
		{
			"name": "gameplays",
			"item": [
				{
					"name": "finalize",
					"item": [
						{
							"name": "Finalize Played Games",
							"id": "d230acc4-b4de-454b-a39f-48da4bcdb8b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"off\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"demotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"push\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"off\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"nomotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"w\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/gameplays/finalize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gameplays",
										"finalize"
									]
								},
								"description": "Use this endpoint to send the final score of one or more ended games to the server.\n\n**Flow Diagram**:\n![Flow Diagram](https://s3.eu-central-1.amazonaws.com/docs.bonetwork.co/apps/bilgisavasi/openapi/flows/get.gameplays.finalize.png)"
							},
							"response": [
								{
									"id": "70a6e14c-32c8-4525-927f-a6fa5116a56c",
									"name": "This standard response is returned in cases where there is nothing actually to returnto the client. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"off\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"demotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"push\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"off\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"nomotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"w\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "c50be9cc-73c0-4133-9bf5-68a13ea24df0",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"off\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"demotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"push\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"off\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"nomotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"w\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "ff339203-de07-4c5e-8a36-8927b770c55a",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"off\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"demotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"push\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"off\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"nomotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"w\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "82787e6e-9da2-4841-a0f8-e74f2064a2c5",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"off\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"demotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"push\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"off\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"nomotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"w\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"animals\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "bb0dfb3e-bec6-4ca3-bd49-b541749485f9"
				},
				{
					"name": "load",
					"item": [
						{
							"name": "{gameType}",
							"item": [
								{
									"name": "Retrieve Multiple Solo Games",
									"id": "219834f2-cfe7-415c-8053-997d1145f313",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"load",
												":gameType"
											],
											"query": [
												{
													"key": "count",
													"value": "<integer>",
													"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10"
												}
											],
											"variable": [
												{
													"key": "gameType",
													"value": "solo",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to start a game for player. If you provide a count that is greater than 1 then you can get more games at once and use them as a precache to speed up new game starting process.\n\n!!! NOTE: Currently only std10 game type is accepted."
									},
									"response": [
										{
											"id": "5dadb37e-cffe-4af4-bd8e-f6a04976bff2",
											"name": "This standard response is returned when a list of games are requested.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "16f50250-73db-41cb-8749-374c589741f3",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "fad49963-2553-427f-8aec-8339d7b51efc",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "02a8de91-5c2e-46f1-9372-48fd2f0e7b4d",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e96b2c77-4965-4c79-ba48-9b10a3929270"
						}
					],
					"id": "3c83ec3a-3747-41e2-8152-44e46cffae8a"
				}
			],
			"id": "4317f9d0-37b8-4285-8455-eaea3f290cf7"
		},
		{
			"name": "gameplay",
			"item": [
				{
					"name": "result",
					"item": [
						{
							"name": "{gameplayId}",
							"item": [
								{
									"name": "Get Result of a Gameplay",
									"id": "c2c79605-fd9b-4c67-9fa2-2c65ca2363c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"result",
												":gameplayId"
											],
											"variable": [
												{
													"key": "gameplayId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to check the end result of a game play. This endpoint must be used if game result is not provided after calling POST :: /gameplay/progress/init endpoint."
									},
									"response": [
										{
											"id": "0f7ab23e-709b-4568-af71-b65dfbe7cbd3",
											"name": "Whenever a PvP game result is submitted, this style of response is returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "3e0f4ba1-6645-426d-8cc6-1b2b9a17a7e3",
											"name": "This response is returned for all unauthorized access attempts",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "47f3cbad-74c6-46c9-b3ef-7b439b6314b2",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "9036c27b-8e45-4551-8ecc-a822dd75bc4c",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "671f5af8-5bfe-48ea-a4e8-ba504d905dcc"
						}
					],
					"id": "8db3cb21-6124-4eec-98b4-7eacbb9661fb"
				},
				{
					"name": "init",
					"item": [
						{
							"name": "{gameType}",
							"item": [
								{
									"name": "Match with PVP Opponent",
									"id": "3d861de3-6769-422d-bb1b-b4ddaa6b3f14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/init/:gameType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"init",
												":gameType"
											],
											"variable": [
												{
													"key": "gameType",
													"value": "pvp",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to request a PVP game \"match request id\". When this request reaches the server, the server creates a match request id and it returns this id as result set of the response. The request is queued and handled asynchronously. Therefore a second call is needed to be made with the request id provided from this endpoint to start the game play."
									},
									"response": [
										{
											"id": "cbbe3f68-6e1b-4641-b52d-0ca340bfab4d",
											"name": "Returns \"match request id\".",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "124a7379-a603-461a-99f5-a353dffb192e",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "f1e6adf1-1cc4-47e9-a673-186d9cc18e77",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "c824bc08-cf3e-4236-b5c8-b1cc7a20dd0b",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e8409868-b1a1-40ea-855c-ec89d529d1c8"
						}
					],
					"id": "859f0d7e-9a4a-43ad-b694-4217475da094"
				},
				{
					"name": "start",
					"item": [
						{
							"name": "{requestId}",
							"item": [
								{
									"name": "Start a PVP Game",
									"id": "44c6314e-2cbf-45ae-9f9e-e037d25a63f4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/start/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"start",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "<uuid>",
													"description": "(Required) Match reqest id."
												}
											]
										},
										"description": "Use this endpoint to start/load a PVP game for a given request id. For this endpoint to function the gameplay progress of the request id must belong to the authenticated player. The result set of the response is a \"PvpMatch\" model (https://docs.bonetwork.co/bilgisavasi/pvpmatch)."
									},
									"response": [
										{
											"id": "fd705c82-7cbe-417f-8c66-657e944156c6",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "04a6e6fa-7892-48bf-99df-6627bf71e1a3",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "a272457c-1e79-4c8b-9862-65e41e0b6c47",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "0f37bc90-0923-4c3b-8e06-f854a1a75762",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5ed1b072-9f7c-4cf2-a4a5-b19f4cf241c9"
						}
					],
					"id": "040e43b9-5767-4f0f-a8d7-08a8cf68c29a"
				},
				{
					"name": "progress",
					"item": [
						{
							"name": "Register Gameplay Progress of a Player",
							"id": "a0be64f2-6d3d-4221-9045-463c2ca85017",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"en-us\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"sms\",\n        \"gameResultNotifications\": \"push\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"push\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"u\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"geography\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/gameplay/progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gameplay",
										"progress"
									]
								},
								"description": "This endpoint is used to register a single gameplay progress. It is mainly used in PVP games to register a player's gameplay progress to the system.\n\n**Flow Diagram**:\n![Flow Diagram](https://s3.eu-central-1.amazonaws.com/docs.bonetwork.co/apps/bilgisavasi/openapi/flows/post.pameplay.progress.png)"
							},
							"response": [
								{
									"id": "5e454652-2d1e-4d23-a443-4314a168766e",
									"name": "On success, it returns 200.0000 with PvpResult model (https://docs.bonetwork.co/bilgisavasi/pvpresult). If the opponent is still playing the game is still active and not finalized, then ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"en-us\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"sms\",\n        \"gameResultNotifications\": \"push\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"push\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"u\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"geography\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "79e61336-c118-4acb-a1d8-c10a89946901",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"en-us\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"sms\",\n        \"gameResultNotifications\": \"push\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"push\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"u\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"geography\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "2f0d30cd-772a-4f91-822d-44e1a0ccbb66",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"en-us\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"sms\",\n        \"gameResultNotifications\": \"push\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"push\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"u\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"geography\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "521c7418-a8ea-472b-a801-56f4039681f4",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"en-us\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"sms\",\n        \"gameResultNotifications\": \"push\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"push\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"u\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"geography\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"animals\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "bc826a34-883a-4c3a-a9ef-2126126afe4d"
				},
				{
					"name": "{gameplayId}",
					"item": [
						{
							"name": "power-up",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Use Powerup For PVP Gameplay",
											"id": "591b4102-d5e7-4085-a7aa-5f7066b1770b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														":gameplayId",
														"power-up",
														":key"
													],
													"query": [
														{
															"key": "qty",
															"value": "<integer>",
															"description": "Quantity of used powerup."
														}
													],
													"variable": [
														{
															"key": "gameplayId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "This endpoint provides us to use powerup for pvp gameplay."
											},
											"response": [
												{
													"id": "a6c3c734-cb9f-40f6-88ea-837414bd1594",
													"name": "-",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "d7cf4f03-e190-4861-9334-38e77a942a20",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "72604eb6-c9bb-4665-9fd3-aa6195c011ac",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b03e90c8-762c-4402-8dab-db0d4a02a0ac",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Make An In-Game Power-Up Usage With Purchase",
											"id": "ef30aa37-2524-4a83-9ba1-fea5dd8b971d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														":gameplayId",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "gameplayId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint when the player wants to make an \"in gameplay\" purchase of a powerup."
											},
											"response": [
												{
													"id": "7a91c2b7-29c5-4284-ae3b-1ea4e7cef8fa",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "10008932-8825-49da-b3fe-432bc4bb01d2",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4155a836-0128-47a0-91b4-028e6cc3ca52",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "ecd595fd-3158-4b4a-b779-aa5936ca774a",
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												}
											]
										}
									],
									"id": "91c5687b-3a7e-435b-b8b9-5ef2a641b997"
								}
							],
							"id": "46cde8ea-a8f1-4bfc-9b32-6ebcd7c4e3ca"
						}
					],
					"id": "54acda71-5513-488a-b969-69e6d856b1c5"
				}
			],
			"id": "86b3d831-7d25-4c10-981c-1435e9f8f0f6"
		},
		{
			"name": "init",
			"item": [
				{
					"name": "Initialize App",
					"id": "fffc2b32-e765-4387-a9ca-a2481d4e8f99",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Device-Id",
								"value": "<string>",
								"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory."
							},
							{
								"key": "X-Firebase-Token",
								"value": "<string>",
								"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/init",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"init"
							]
						},
						"description": "This is the first endpoint you need to use. It provides you environment specifics initialization values. https://docs.bonetwork.co/bilgisavasi/appinit"
					},
					"response": [
						{
							"id": "994210fe-c7f6-4d91-a2c2-60939d0c54bc",
							"name": "If request is susccessful, result set returns AppInit model (https://docs.bonetwork.co/bilgisavasi/appinit(/",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "68afac22-d435-4ae6-8129-7fe1db95a440",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "23be51d2-ed81-496b-891c-abf717420a60",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "95be13e0-81c3-41bd-b557-47f50e8bbc4e"
		},
		{
			"name": "player",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "Login Player",
							"id": "dbb116d2-e6e0-4425-adea-e52b1aa8e436",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Player-Id",
										"value": "<uuid>",
										"description": "This should be supplied only if there is a player id available in device memory."
									},
									{
										"key": "X-Device-Id",
										"value": "<uuid>",
										"description": "(Required) This is the device specific id, generated for the user."
									},
									{
										"key": "X-Firebase-Token",
										"value": "<string>",
										"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/player/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player",
										"login"
									]
								},
								"description": "Use this endpoint to grab a specific player's standard profile information. If id equals to \"null\", the information provided will be equal to the player who is tied to the session token provided in header with key X-Session-Token."
							},
							"response": [
								{
									"id": "faa60370-3fb1-49b3-a5b2-73d26c21963e",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "a4100e7c-1227-4ccb-a244-ab4aab3db0e4",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "09edd9ad-ae62-4cb0-ac23-8e2602836079",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "dda90cd4-7806-41a2-86b8-61a902b4151e",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "92c6ffa0-79da-44fd-b81e-eb824eb45b26"
				},
				{
					"name": "connect",
					"item": [
						{
							"name": "social",
							"item": [
								{
									"name": "{platform}",
									"item": [
										{
											"name": "Connect Player's Social Account",
											"id": "5bf80cac-0b8d-4319-b653-d8a2d73817e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Player-Id",
														"value": "<uuid>",
														"description": "This should be supplied only if there is a player id available in device memory."
													},
													{
														"key": "X-Device-Id",
														"value": "<uuid>",
														"description": "(Required) This is the device specific id, generated for the user."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/connect/social/:platform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														"connect",
														"social",
														":platform"
													],
													"variable": [
														{
															"key": "platform",
															"value": "google",
															"description": "(Required) Platform can be one of the following: google, apple"
														}
													]
												},
												"description": "Use this endpoint to register a player's social account information and connect her/his social account with her/his game account."
											},
											"response": [
												{
													"id": "edd54732-4852-4333-afd6-842e0e064984",
													"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "a25cd672-aee6-44a4-822e-98140cdeedbc",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "98626d19-1426-4c07-b6d8-c80ab44df627",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "45b2ffd7-e59f-4a34-811f-1b5a3db0e008",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "4af603d1-0f6c-4047-a300-b04f18f0fb26"
								}
							],
							"id": "4b912a64-6e8e-4c20-85f0-8c85d0f9c199"
						}
					],
					"id": "3fa837df-114a-4fe9-a868-03ce5b288815"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "alias",
							"item": [
								{
									"name": "{newAlias}",
									"item": [
										{
											"name": "Update Player's Alias",
											"id": "659ec447-ed30-46e8-9798-0656e16d87e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"alias",
														":newAlias"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "newAlias",
															"value": "<string>",
															"description": "(Required) Player's new alias."
														}
													]
												},
												"description": "Use this endpoint to update player's joker count."
											},
											"response": [
												{
													"id": "b6fe4d00-02d7-4e55-8456-b0e245cc8b2e",
													"name": "If process is handled successfull \"null\" value returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "874859be-7640-4984-8aeb-d5b3b41dc526",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "43f3de5e-213a-434e-a9de-d83d011fcf83",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "7c17d834-3d2a-4f02-9b69-87d36fc5b624",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "a663b8ec-4457-4a2c-b408-9e98fa5abe4e"
								}
							],
							"id": "28d662f4-68a2-41e4-9d6a-049d9842bf49"
						},
						{
							"name": "coins",
							"item": [
								{
									"name": "{amount}",
									"item": [
										{
											"name": "Add New Coins to Player",
											"id": "4d4dc88f-4c61-4a95-b7d9-8a42f3c4b6e9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of coins to add."
														}
													]
												},
												"description": "Use this endpoint to increment player's coin amount by provided amount.\n"
											},
											"response": [
												{
													"id": "94216cae-3dd8-4303-924e-51506524c0b8",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "d0c305a0-94e2-4175-907a-aed6fcc7d606",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b3d19a4a-71a6-499c-9456-cd60da7ce86a",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "20ecdb66-8acd-498a-8cf3-bb74920bb45e",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Remove Coins of Player",
											"id": "86033b38-5747-43a9-961d-507316cf75bb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of coins to add."
														}
													]
												},
												"description": "Use this endpoint to decrement player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "02adf16c-4e95-48e8-b9d5-6334b73a3643",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "3cdcc1da-b77e-4089-94ab-0d8aafc8e02b",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "7a0160f3-8686-4dfe-a628-8a8b18da0857",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "a6c5bea7-1f19-4cb6-b48c-d390d2ea5a75",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "306c9f1b-ae2b-466b-9e00-8a34382f4417"
								},
								{
									"name": "Retrieve Player's Coin (Ganimet) Amount",
									"id": "e2481b12-6e9f-4b04-abd1-e749c6269730",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/coins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"coins"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "9f8c2974-199f-4264-a000-10c066ab3848",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "04e400f9-a4a0-4bf6-b862-5e8c99bccb4d",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "ccc9380d-7b67-4a47-bcb7-048809a118a7",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "f18b3688-e3e0-4a41-80f6-9ab6fb7bc0b0",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a9e2943e-07c0-44cb-9aea-b8c6acef40b1"
						},
						{
							"name": "experience",
							"item": [
								{
									"name": "{amount}",
									"item": [
										{
											"name": "Add New XP Points to Player",
											"id": "38e76504-e878-4ac8-bfc4-70560ce588af",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of experience to add."
														}
													]
												},
												"description": "Use this endpoint to increment player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "7382febb-1be1-4deb-9863-93d52c1a4dda",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "3dc9f445-551d-4bb1-b3d5-93f638d105b4",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "be902512-8762-4194-a384-dbd86b9bcce2",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4cff5091-bdac-4f45-b3d4-17d665ba25a0",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Remove XP Points from Player",
											"id": "78896888-1a23-4766-9fed-2d392d084318",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of experience to add."
														}
													]
												},
												"description": "Use this endpoint to decrement player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "33e2f2e4-f47e-4b50-bb27-509070fb5786",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e5ce3d90-1111-401a-9a8f-ac0e6cc0aaaf",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "d9ba340a-f682-4b60-8823-84c83d3692cd",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "daca67e6-9029-4122-9ad8-e44b4524ca99",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "f84805e5-7629-4c1a-8073-b1ff1437827c"
								},
								{
									"name": "Retrieve Player's Experience Points",
									"id": "a217fb82-8c8b-4d70-a314-7be411e79230",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/experience",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"experience"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "571058ca-7b06-402c-b88c-65e511067b8a",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "a8389b3d-d85b-430f-99a8-dfe26b431785",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "c28a93dc-5a76-4fdc-b3d4-a1a6d40df3d1",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "a5dc18f9-a450-4f6f-80ba-5d3ee71bced6",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a6b354e1-328e-47d6-b367-fd688c803093"
						},
						{
							"name": "avatar",
							"item": [
								{
									"name": "Retrieve Player Avatar",
									"id": "b232939d-ba12-4f69-ba61-970b3c39501c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"avatar"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to get the path of the current avatar of a player. This information is also a vailable in GET::/player/{id}"
									},
									"response": [
										{
											"id": "51dd2421-75cb-4002-b461-f4c558ed6a60",
											"name": "Successfull response will return URL of the avatar as a value of resukt.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "28337807-91c2-4be3-9cbc-5a678391a0cf",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "eb017ca5-f238-41a9-95c1-a7976feda5b7",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "af0f0903-2314-44fd-9b55-4a93cd377b7a",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Upload New Avatar",
									"id": "772df621-c716-42ee-9f95-1e2e5e62673d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/player/:id/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"avatar"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to upload a new avatar for the player."
									},
									"response": [
										{
											"id": "03bfe329-e1d8-4d64-8051-87e29d9b2a11",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.\n\nWhen upload is successful, the path of uploaded file is returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "34816bce-e2f5-40ce-8c1d-fd12fa2386b9",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "19199bd9-f163-4a3c-93c9-1044dc5fd644",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2799f57a-ee57-4441-80aa-ed8ce3726396",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5cb5e17a-6206-4bd1-95f0-7b0b3fdd6dc3"
						},
						{
							"name": "gameplays",
							"item": [
								{
									"name": "pvp",
									"item": [
										{
											"name": "recent",
											"item": [
												{
													"name": "Retrieve Player's Pvp Gameplays",
													"id": "7e58fe0c-94f0-46ea-b1ff-dc714a206a12",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"gameplays",
																"pvp",
																"recent"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Player's uuid."
																}
															]
														},
														"description": "Use this endpoint to get the latest (i.e. last 50) gameplays of a player."
													},
													"response": [
														{
															"id": "198e26bb-67bc-4691-9b63-69a0979dcd9a",
															"name": "Successful sresponse returns PvpResultSummary model (https://docs.bonetwork.co/bilgisavasi/pvpresultsummary) as value in result.set",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "9ea4e1fb-2dd8-4cee-80a3-e1aae19153e0",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "ec13206d-b1f9-43e1-b977-26f93e936c0c",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "25326657-3ed2-4071-ba26-1e0505393626",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "e8f9b156-a594-4367-b719-5e7728e5d862"
										}
									],
									"id": "9a68d040-867a-4741-99a4-af787a2a30b2"
								}
							],
							"id": "d5d26e12-e20c-4eef-8972-2c2d51e65f1b"
						},
						{
							"name": "level-info",
							"item": [
								{
									"name": "Retrieve Player's Level Info",
									"id": "a38e78b1-8b04-4856-a752-d4f5ce1d4d30",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/level-info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"level-info"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "721b3649-6777-49f8-acf6-c9525471435f",
											"name": "Successful response returns PlayerLevelSummary model (https://docs.bonetwork.co/bilgisavasi/playerlevelsummary) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "49517f8e-3ca5-4b28-849b-e4cc607882f1",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "bf8df7e6-cb49-4954-8f9e-ddc9cd1cb194",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5567ee0e-fdda-419b-aaa7-6973ed1d0cc8",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "f43fb7e1-2631-4a2c-a8b2-9ab51f15d1e1"
						},
						{
							"name": "life-info",
							"item": [
								{
									"name": "Retrieve Player's Life Info",
									"id": "6addf3c7-4bba-4d39-81d2-8cb861cbb496",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/life-info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"life-info"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's life info including regeneration counter."
									},
									"response": [
										{
											"id": "aef8dd92-148b-4d16-b5e2-ffff7d40a349",
											"name": "Successful response returns LifeInfo model (https://docs.bonetwork.co/bilgisavasi/lifeinfo) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2094ce9e-927a-4a73-8a4a-32cf7ac3354c",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5a87b452-ef21-4ea8-9ee7-57eca42b4542",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "4c098332-26b7-4992-800e-103c972db1d8",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "ec299540-3ba8-48f5-9301-07769ba0b37e"
						},
						{
							"name": "power-ups",
							"item": [
								{
									"name": "Retrieve Player's Power-ups",
									"id": "4f8cd6f4-858b-4b11-a020-27bade3fdd2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/power-ups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"power-ups"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uri>",
													"description": "(Required) Player's uuid."
												}
											]
										},
										"description": "Use this endpoint to get the latest information of a given player's power-up counts."
									},
									"response": [
										{
											"id": "84144ed5-fba9-488d-bcdd-b141b1970c1f",
											"name": "Successful response returns PlaywerPowerUps model (https://docs.bonetwork.co/bilgisavasi/ekUX-playerpowerups) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "48215b4c-5b80-4353-aba0-51c6b79fe4ba",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "7de6f45c-8792-4323-b4c0-e0db95dafae6",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "f0723e20-4851-412a-a156-953effd09826",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a22140dc-3778-4f66-8d3e-30d9cebbe9d1"
						},
						{
							"name": "power-up",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve Total Power-Up Count of Player",
											"id": "4355bb81-ef1c-4a0b-b339-5baf6d254d4f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "joker",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint to get the total number of items that a user possesses for a given power-up.\n\nAvailable keys are:\n- fiftyFifty (integer)\n- immortality (ImmortalityInfo model)\n- immunity (ImmunityInfo model)\n- life (integer)\n- majority (integer)\n- joker (integer)"
											},
											"response": [
												{
													"id": "8b7d0f69-cae9-419b-896c-1fdefcdeda0d",
													"name": "Successful response returns ImmortalityInfomodel, ImmunityInfo model or a scalar value  (https://docs.bonetwork.co/bilgisavasi/immortalityinfo, https://docs.bonetwork.co/bilgisavasi/immunityinfo) as value in result.set.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "208c5342-f09b-4307-b786-fdea3f8a26b8",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "37c03711-1f7a-4498-8b34-45d33a7b785e",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "1b62ef51-7e4b-4951-bae5-6292584c1048",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Decrement Player's Power-up",
											"id": "be5f57f8-26ba-4f17-a432-8b157fb2f7ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "joker",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint if the player decides to user one of her/his power-ups. This endpoint decrements the given power-up of a user by \"one\". If there are no available power-up to use an error will bi returned."
											},
											"response": [
												{
													"id": "1462f0e6-e03f-47da-84f8-920c91defa90",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "fa73dd74-5ea7-4648-b941-7e55a4a4f220",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "cc762e61-2291-4e9a-97bb-2535d463036b",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "0e89c892-5f46-4e28-9064-d00bcd1ed707",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Make An In-Game Power-Up Purchase",
											"id": "51a6e90d-970c-474f-bb35-caad8ea1d9a8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "joker",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint when the player wants to make an \"in gameplay\" purchase of a powerup."
											},
											"response": [
												{
													"id": "d487d5f4-d374-4418-be3b-70222f7788eb",
													"name": "200-success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4180d836-ea7b-490e-bcd9-7a4d4a5087c3",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b6b4ca37-1281-48fe-9652-c64dd6683814",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "f89d2dba-2bf8-46c1-a650-05d16348bd41",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "4e20f26c-d8eb-4cde-b71f-ed8f12d6b07f"
								}
							],
							"id": "e51a9664-e87c-4ca5-92c0-cd471db602dd"
						},
						{
							"name": "standing",
							"item": [
								{
									"name": "current",
									"item": [
										{
											"name": "Retrieve Player's Standing Summary",
											"id": "4e075ba5-de72-4d99-a770-c388a2e3c2db",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/standing/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"standing",
														"current"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint to get the standing summary from the player's point of view. This last point only shows the status of the league and rank to which the player belongs."
											},
											"response": [
												{
													"id": "eea2bb7e-ed2f-4fff-b145-5d5563b3133a",
													"name": "Successful response returns PlayerLEaderboardStanding model (https://docs.bonetwork.co/bilgisavasi/playerleaderboardstanding) as value in result.set.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "bc1b3424-ee95-4e5c-a93c-e5cefad43141",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e8de6967-a427-4059-906b-409cde1dae88",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "75f5cd0b-9f6d-48ac-b67c-f38722504ed9",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "32a34e1f-4cb8-464a-babe-76b0dcecc6fe"
								}
							],
							"id": "4a9b232e-4973-4db3-8e2e-6afdc5d7ec36"
						},
						{
							"name": "stats",
							"item": [
								{
									"name": "category-success",
									"item": [
										{
											"name": "Retrieve Player Stats (Category-Success)",
											"id": "0eb6e9aa-8e4b-40be-b8a1-456b18220234",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/stats/category-success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"stats",
														"category-success"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint to retrieve player's success rates per category. This information is also a vailable in GET::/player/{id}"
											},
											"response": [
												{
													"id": "8d5526d9-f7c3-4a9d-aa01-a225eab80963",
													"name": "Successful response returns a collection of PlayerTagStatItemmodel\n(https://docs.bonetwork.co/bilgisavasi/playertagstatitem)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "02b12d2d-d61d-4a93-a751-dcd2320102d3",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "1b3b313f-77b7-47b3-91ed-b9890b320880",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4184d583-5fae-4c78-9711-333fc43b7dfc",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "60660ac0-bf9e-4c1f-8a2b-352879efd331"
								}
							],
							"id": "163475a1-7db7-4146-ae72-4d53bcd1e833"
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Update Player Settings",
									"id": "3af6d966-83af-489f-87be-c2351c604a03",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"off\",\n    \"gameResultNotifications\": \"email\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"off\",\n    \"legalNotifications\": \"push\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/player/:id/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"settings"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Player's id."
												}
											]
										},
										"description": "Use this endpoint to update player's settings (preferences)."
									},
									"response": [
										{
											"id": "1ed16de4-edae-48cf-9369-79f6e2b29881",
											"name": "Returns up-to-date preferences of player. (PlayerSettings model - https://docs.bonetwork.co/bilgisavasi/playersettings)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"off\",\n    \"gameResultNotifications\": \"email\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"off\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "1c8f80bb-d61b-4280-8089-7cc6bed210bb",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"off\",\n    \"gameResultNotifications\": \"email\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"off\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "f9748305-7e81-4b7d-8da2-19bec4d12f95",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"off\",\n    \"gameResultNotifications\": \"email\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"off\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "c5f9d6bc-1975-48e6-a542-7eda7e4ca2c9",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"off\",\n    \"gameResultNotifications\": \"email\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"off\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "14e00a09-b9ee-478a-9bb9-2fd6a0d2e4f5"
						},
						{
							"name": "Retrieve Player Details",
							"id": "0bd18244-685e-4826-a3a3-aee4bcc77fe1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/player/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) You can supply one of the following:\n\n- uuid (Bilgi SavaÃ…Å¸Ã„Â± Registration Id)\n- Game Center Id (obtained from Apple or Google game centers)"
										}
									]
								},
								"description": "Use this endpoint to grab a specific player's standard profile information. If id equals to \"null\", the information provided will be equal to the player who is tied to the session token provided in header with key X-Session-Token."
							},
							"response": [
								{
									"id": "e051caff-967e-4193-8167-405905db087f",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "bc385be2-f58e-4d32-9dbd-e217f5483e27",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "1223bc6a-2751-48d6-a27b-6444afe3351d",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "8d7c85f8-2160-482a-ba3d-dca699b6f173",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "1534ed6d-05fd-489a-ade1-86fd2618cc49"
				},
				{
					"name": "Register New Player",
					"id": "8450df7a-bfb2-49d8-8768-88f3b5a4e393",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"push\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"push\",\n      \"paymentNotifications\": \"off\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"off\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"nomotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/player",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"player"
							]
						},
						"description": "Use this endpoint to create a new player record, if you cannot find a matching player record."
					},
					"response": [
						{
							"id": "359f0db5-afa7-42fd-98e3-2ecd99e0fd31",
							"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"push\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"push\",\n      \"paymentNotifications\": \"off\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"off\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"nomotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "c07153c5-0a9e-459e-818f-957c41649ddf",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"push\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"push\",\n      \"paymentNotifications\": \"off\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"off\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"nomotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "65c4a4c2-c789-40ac-bb04-f763621d05fc",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"push\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"push\",\n      \"paymentNotifications\": \"off\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"off\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"nomotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "06e5f96a-a62b-4791-b8f7-cd3e22941a30",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"push\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"push\",\n      \"paymentNotifications\": \"off\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"off\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"nomotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "d46623a4-3bab-4ab8-8541-336656650ad5"
		},
		{
			"name": "support",
			"item": [
				{
					"name": "request",
					"item": [
						{
							"name": "question",
							"item": [
								{
									"name": "Submit Trivia Question Related Issue",
									"id": "a003300e-02aa-4b4a-aa0d-e64e977da157",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Player-Id",
												"value": "<uuid>",
												"description": "This should be supplied only if there is a player id available in device memory."
											},
											{
												"key": "X-Device-Id",
												"value": "<uuid>",
												"description": "(Required) This is the device specific id, generated for the user."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"t\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/support/request/question",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"request",
												"question"
											]
										},
										"description": "Use this endpoint to register players' issue requests related to trivia questions."
									},
									"response": [
										{
											"id": "2b0a5ef9-f5e1-4791-8e26-0ccc619066cf",
											"name": "If successful, response's result set will return null with a response code of \"200.0000\".",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"t\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "0e9b613c-454a-47d9-bf54-cb7fb6d0d856",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"t\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "4143a413-8270-4077-9bba-043c1484c870",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"t\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2b4a016f-bb73-456b-877f-64f3ad52d94c",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"t\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "f7df7f12-61ea-4b3a-bbd7-fd02393605ac"
						}
					],
					"id": "3d0b736f-b051-446d-a6b6-c75993f100d8"
				},
				{
					"name": "suggest",
					"item": [
						{
							"name": "question",
							"item": [
								{
									"name": "Suggest New Trivia Question",
									"id": "376e7f3c-a18c-4bb8-9590-b15524f2307e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Player-Id",
												"value": "<uuid>",
												"description": "This should be supplied only if there is a player id available in device memory."
											},
											{
												"key": "X-Device-Id",
												"value": "<uuid>",
												"description": "(Required) This is the device specific id, generated for the user."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"geography\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/support/suggest/question",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"suggest",
												"question"
											]
										},
										"description": "Use this endpoint to let players suggest new questions.\n"
									},
									"response": [
										{
											"id": "0bf0e8c6-a47e-43ba-81cd-0011714c940f",
											"name": "If successful, response's result set will return the record id of the added suggestion.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"geography\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "df187b9e-292c-4eb9-83d0-7932dcc3169b",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"geography\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "35dbad88-188d-4617-9ca4-6b807e7f1b96",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"geography\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "120e67a0-6c38-4c6c-8adf-d64eda7d2cb2",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"geography\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "84137906-f398-412c-99cf-0df9bb72c0d2"
						}
					],
					"id": "bcc49f33-297b-4946-b31a-d222023b1069"
				}
			],
			"id": "d8b4b8d2-ecdd-4b3d-8df5-8dae5726b6a6"
		},
		{
			"name": "ad-placement",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Retrieve Ad Placement Details by Code",
							"id": "0e147e7d-58f8-4f5f-b0cc-246200ce0d46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ad-placement/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ad-placement",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "<string>",
											"description": "(Required) Ad placement code must match to one of the entries within the database. Please contact project manager to see which code to use at different screens."
										}
									]
								},
								"description": "Use this endpoint to grab details of a specific ad-placement"
							},
							"response": [
								{
									"id": "050c9422-f839-4851-912b-12f1de2bc62c",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "c44f02ac-e154-4e3b-84f5-5a8ecd7c2673",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "876347b8-0a5d-4ce3-b141-aad2aee7eb13",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "709d087e-073a-40f8-b541-0e68e8e9c705",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "0fab7536-672d-4199-ba89-d543fce55e4a"
				}
			],
			"id": "1e5d83bc-957f-4ed9-b681-65e7a6984a91"
		},
		{
			"name": "player-standing",
			"item": [
				{
					"name": "{player}",
					"item": [
						{
							"name": "period",
							"item": [
								{
									"name": "{period}",
									"item": [
										{
											"name": "week",
											"item": [
												{
													"name": "{week}",
													"item": [
														{
															"name": "Retrieve Player's Standing Summary by Period and Week",
															"id": "dc891cf3-e9ba-4892-94f6-0e82d9961de0",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player-standing",
																		":player",
																		"period",
																		":period",
																		"week",
																		":week"
																	],
																	"variable": [
																		{
																			"key": "player",
																			"value": "<uuid>",
																			"description": "(Required) Uuid of the player."
																		},
																		{
																			"key": "period",
																			"value": "<integer>",
																			"description": "(Required) Period in YYYYMM format."
																		},
																		{
																			"key": "week",
																			"value": "<integer>",
																			"description": "(Required) Week number."
																		}
																	]
																},
																"description": "Use this endpoint to get the standing summary of the given player. This endpoint returns information of the player only. The other ranked players within the same leaderboard are not shown. To get a ranking list please see /leaderboard/of/{player}/period/{period}/week/{week} endpoint."
															},
															"response": [
																{
																	"id": "6eafe428-fcb4-4f19-88ae-15e45833fc25",
																	"name": "Successful response returns a collection of PlayerLeaderboardStandingmodels\n(https://docs.bonetwork.co/bilgisavasi/playerleaderboardstanding)",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "a0c1d55b-ec0c-4e8e-a333-47c559a5dd42",
																	"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "f41c8486-a073-412f-a341-8eca0cae2712",
																	"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "e9f7f6bc-a541-4745-bae1-5203fabf0081",
																	"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																}
															]
														}
													],
													"id": "c7d1e69b-a160-47e4-86de-fc9a3599d15d"
												}
											],
											"id": "44e76394-e7cd-4063-8e80-3dbfc84cd7fa"
										}
									],
									"id": "0ed95c0c-e4f6-438e-a77b-a9defc6865d7"
								}
							],
							"id": "d2485436-c2bf-4489-8c09-275788eb90b9"
						}
					],
					"id": "ccc7f9d1-66aa-46a7-a61f-bcadee715248"
				}
			],
			"id": "131c9dde-0484-4686-aa53-68151984e3f2"
		},
		{
			"name": "rewarded-ad",
			"item": [
				{
					"name": "reward",
					"item": [
						{
							"name": "for",
							"item": [
								{
									"name": "{adPlacementCode}",
									"item": [
										{
											"name": "{networkCode}",
											"item": [
												{
													"name": "Start Reward Log Before Viewing of Ad Placement",
													"id": "611c14cd-004f-4b18-8f31-961ed1342321",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rewarded-ad",
																"reward",
																"for",
																":adPlacementCode",
																":networkCode"
															],
															"variable": [
																{
																	"key": "adPlacementCode",
																	"value": "<string>",
																	"description": "(Required) This must match to oe of the ad placement codes stored in database."
																},
																{
																	"key": "networkCode",
																	"value": "fba",
																	"description": "(Required) See https://docs.bonetwork.co/bilgisavasi/ad-network-codes for all available codes."
																}
															]
														},
														"description": "Use this endpoint to create a reward log record before display ad to player."
													},
													"response": [
														{
															"id": "761d7e09-3464-4a6c-8c50-aa655c76b263",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "7ee3eabe-0591-4916-a4b2-c85ec9a2f334",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "13ead850-f9d1-4929-b141-e13519339481",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "73efb280-001d-437c-aa96-ff87f572557e",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "0de4632d-dc50-46b4-b663-553cc944225d"
										}
									],
									"id": "b38c2e12-112b-44c3-aa58-f610ed509fd9"
								}
							],
							"id": "fc29dbf5-9298-4ad0-b336-471084f4893b"
						},
						{
							"name": "{logId}",
							"item": [
								{
									"name": "Complete Reward Log After Viewing Ad",
									"id": "c07fd370-31a7-44e9-a43b-093984b11de1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rewarded-ad",
												"reward",
												":logId"
											],
											"variable": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "(Required) Reward log identification number."
												}
											]
										},
										"description": "Use this endpoint to complete an existing reward log which is waiting to close. And also gives rewards of viewing to player."
									},
									"response": [
										{
											"id": "92fe45c2-41fe-49fe-8e4c-275162612847",
											"name": "Example response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "353ffc02-6331-4ab0-b412-ad5e309728ec",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "6a99e83f-9563-4ce5-b185-b64e36032509",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "af402def-dd44-44f3-8089-9737cec69fd1",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "113d82fb-2ee3-42be-87b8-7967a20d419c"
						}
					],
					"id": "ddf6ae5d-a82a-424b-a6a7-62fce3d82b94"
				}
			],
			"id": "b465d908-a683-4e61-bf42-962a540ea0ec"
		},
		{
			"name": "leaderboard",
			"item": [
				{
					"name": "of",
					"item": [
						{
							"name": "{player}",
							"item": [
								{
									"name": "current",
									"item": [
										{
											"name": "Retrieve Player's Current LeaderBoard",
											"id": "e65a922b-7c34-4423-bc2c-bb8cbf89e1f1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/leaderboard/of/:player/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"leaderboard",
														"of",
														":player",
														"current"
													],
													"variable": [
														{
															"key": "player",
															"value": "<uuid>",
															"description": "(Required) UUID of player."
														}
													]
												},
												"description": "Use this endpoint to show a leaderboard's player rankings for the most active/current leaderboard of the given player."
											},
											"response": [
												{
													"id": "bb0887b6-c551-418c-9c47-3f797749e0f7",
													"name": "Successful response returns LeaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4e6e022a-2df6-422b-bee3-3e3118380024",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b8958115-f50c-4828-8a75-c9e43bb7e011",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "745b479e-bce4-4282-a77f-5162e5b3e0c8",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "b10b2439-fc9f-4153-b9b5-61d3768f58e8"
								},
								{
									"name": "period",
									"item": [
										{
											"name": "{period}",
											"item": [
												{
													"name": "week",
													"item": [
														{
															"name": "{week}",
															"item": [
																{
																	"name": "Retrieve Player's LeaderBoard by Period and Week",
																	"id": "e434477d-94af-4647-ae38-e5e867f96be4",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"leaderboard",
																				"of",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player",
																					"value": "<uuid>",
																					"description": "(Required) Player's uuid."
																				},
																				{
																					"key": "period",
																					"value": "<integer>",
																					"description": "(Required) YYYYMM formatted integer which is used to segment standings by year & month."
																				},
																				{
																					"key": "week",
																					"value": "<integer>",
																					"description": "(Required) Week number as integer. Generally an integer between 1 and 53 inclusive. It used to segment standings on a weekly basis."
																				}
																			]
																		},
																		"description": "Use this endpoint to get a leaderboar'S player rankings for the given period and week for the leaderboard that the given player belongs to."
																	},
																	"response": [
																		{
																			"id": "7c9e65ea-f7f1-4838-a35e-5661d5ef6a2d",
																			"name": "Successful response returns LEaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "621caf8d-078f-47d3-98ac-9f1e71eb2411",
																			"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "49fea40f-2c02-4e62-9f1a-cfb1152cfd6a",
																			"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Precondition Failed",
																			"code": 412,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "05482869-2021-4c01-8797-6ebb90d451da",
																			"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		}
																	]
																}
															],
															"id": "dc4df9a3-65ed-4711-a2d8-8287c5706311"
														}
													],
													"id": "288b49f5-3e82-4d83-80cc-d5fd564d81b9"
												}
											],
											"id": "c9239b4e-97bf-4aff-9295-0e29dede8f87"
										}
									],
									"id": "49e08efb-1216-4fc1-921f-1da81b1e6fc8"
								}
							],
							"id": "b4138953-a0ff-4e23-8e2a-b8dd14189371"
						},
						{
							"name": "group",
							"item": [
								{
									"name": "{groupId}",
									"item": [
										{
											"name": "Retrieve Leaderboard By Group Id",
											"id": "d82b11df-313a-4e64-a411-9d9e4406c153",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=demotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"leaderboard",
														"of",
														"group",
														":groupId"
													],
													"query": [
														{
															"key": "period",
															"value": "<integer>",
															"description": "Get a specific leaderboard by period. If ommitted current period is returned."
														},
														{
															"key": "week",
															"value": "<integer>",
															"description": "Get a specific leaderboard by week number. If ommitted current week is returned."
														},
														{
															"key": "zoneCode",
															"value": "demotion",
															"description": "Use this to get only the list of players located in the given zone of the leaderboard."
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<integer>",
															"description": "(Required) Leaderboard group id."
														}
													]
												},
												"description": "Use this endpoint to get a leaderboar'S player rankings for the given period and week for the leaderboard that the given player belongs to."
											},
											"response": [
												{
													"id": "c6f65865-9dc1-4903-9e32-7c59fb7c5059",
													"name": "Successful response returns LEaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=demotion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "demotion"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "d6eee6f3-7783-44a7-8d70-09992925e2a1",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=demotion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "demotion"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b05205e4-d641-49f1-bc2d-215d272b22e0",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=demotion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "demotion"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "41ecb857-f6ff-42ec-a426-b438981bda50",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=demotion",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "demotion"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "8297acc4-91fa-4ccb-aeeb-be9e0f7aea41"
								}
							],
							"id": "d84fe232-c6a7-4348-a682-7984047cd25f"
						}
					],
					"id": "2ecce92f-dcee-4908-bd90-cb90469b70cf"
				}
			],
			"id": "42b8577b-2bf7-4a79-afdb-f6095ba92abf"
		},
		{
			"name": "purchase",
			"item": [
				{
					"name": "register",
					"item": [
						{
							"name": "{sku}",
							"item": [
								{
									"name": "{qty}",
									"item": [
										{
											"name": "Register Successful Purchase",
											"id": "8717b977-afe1-428c-bbd6-6098390d0635",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"register",
														":sku",
														":qty"
													],
													"variable": [
														{
															"key": "sku",
															"value": "<string>",
															"description": "(Required) Stock code of the product."
														},
														{
															"key": "qty",
															"value": "<integer>",
															"description": "(Required) Total quantity purchased."
														}
													]
												},
												"description": "This endpoint is used to register a successfully completed purchase of user. This endpoint logs the user purchase, checks it with the corresponding store and defines the rewards instructed in product definition to player."
											},
											"response": [
												{
													"id": "2959dee2-178a-4829-b416-d7aad44da50a",
													"name": "Successful response returns Transaction model\n(https://docs.bonetwork.co/bilgisavasi/transaction)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "77961e45-9eba-4106-98b8-1564d85101d8",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "ae0a35a2-ae13-45a4-9a45-5a03b8f783ae",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e4c5a6b7-611b-4792-8260-b1e5740ada85",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "e8cb7ac9-09ea-4160-af57-db09487d21a2"
								}
							],
							"id": "a52d9409-2412-4478-8b8c-22acad27673e"
						}
					],
					"id": "65aa2487-2736-44d3-99cd-eae4badd0ccd"
				},
				{
					"name": "from",
					"item": [
						{
							"name": "store",
							"item": [
								{
									"name": "Create a Store Transaction",
									"id": "55d4ceee-935a-466f-8dc1-f5200d3098be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/purchase/from/store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"purchase",
												"from",
												"store"
											]
										},
										"description": "This endpoint is used to create a new transaction in the database. The transaction must be registered with the status \"w\"."
									},
									"response": [
										{
											"id": "4f4247d5-6924-4e7e-9e15-54e6643fe081",
											"name": "Successful response returns Transaction Basic model with the ID number.\n(https://docs.bonetwork.co/bilgisavasi/transactionbasic)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "cca06652-8d76-431e-a9db-fb22d454298d",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "ee00831d-9959-4e96-b914-5c1c368f924f",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "26cfc5fc-cea1-4d66-aed2-c9da8d8fff41",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a Store Transaction",
									"id": "c948fda0-6517-4a0e-b219-5e1704b620d9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/purchase/from/store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"purchase",
												"from",
												"store"
											]
										},
										"description": "This endpoint MUST be called once the response from app stores' fetched after a purchase request."
									},
									"response": [
										{
											"id": "4a7e5571-fe6c-40b2-b287-d4a0d03160a5",
											"name": "Successful response returns Transaction Basic model with the ID number.\n(https://docs.bonetwork.co/bilgisavasi/transactionbasic)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "c396070b-21c1-4138-a517-8898e005d5e3",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "4fe7ac3e-4f6a-458c-ae6b-5365bd8d5f6d",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "8b3d40df-0b8d-4e33-8c9b-54040dadb7a5",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e4c22d70-c6b1-4c61-a270-935e44a2ee2c"
						}
					],
					"id": "642f4628-86ab-4b68-abed-8daf290f6a14"
				}
			],
			"id": "de5b4464-e142-445d-a0c4-014e6452a614"
		},
		{
			"name": "products",
			"item": [
				{
					"name": "by-group",
					"item": [
						{
							"name": "List Products Grouped by Categories",
							"id": "470be1b5-a0b9-4873-a19b-cafc54472d02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"by-group"
									],
									"query": [
										{
											"key": "group",
											"value": "<integer>",
											"description": "If provided, only products in specific group will be visible."
										},
										{
											"key": "visibleInStore",
											"value": "yes",
											"description": "If not provided only \"visible\" products will be listed."
										}
									]
								},
								"description": "Use this endpoint to list products grouped by product categories."
							},
							"response": [
								{
									"id": "b4058066-3346-425f-b87e-ec3121b8e0a1",
									"name": "Successful response returns a collection of ProductGroup models.\n(https://docs.bonetwork.co/bilgisavasi/productgroup)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "8983f3d3-0c89-4e64-85e8-550ffbaa73df",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "e42778d6-44ce-419a-9988-692a6b6c94b7",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "5ea3b3ef-6444-4577-85ab-b17a6d38e85b",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "7ed6b2d3-f04c-4170-b5a5-771cf0a40bf4"
				},
				{
					"name": "List Products",
					"id": "f55ff577-ab53-451b-aef5-6ea271b4afa1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "packageType",
									"value": "b",
									"description": "b: paket, s: tek Ã¼rÃ¼n"
								},
								{
									"key": "currency",
									"value": "KOIN",
									"description": "KOÄ°N, TRY"
								},
								{
									"key": "group",
									"value": "<integer>",
									"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r."
								}
							]
						},
						"description": "Lists all products by given filters and search criteron."
					},
					"response": [
						{
							"id": "e8447999-cae0-4d63-a226-dfab57660eac",
							"name": "Successful response returns a collection of product models\n(https://docs.bonetwork.co/bilgisavasi/product)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "55b676fe-41fd-49cf-b6c7-b76ff0cafd7d",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "89fcce1d-c6ca-4b37-9d9a-f98945dba16d",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "1b7df482-5068-4693-9094-ef6d1cb5d293",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "2205de7d-6d20-4bef-b4de-6610fa3ed00e"
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "suggested",
					"item": [
						{
							"name": "List Questions Suggested By the Player",
							"id": "ffe2ddf1-145d-4466-a2b3-eb89fc00b38e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										"suggested"
									],
									"query": [
										{
											"key": "packageType",
											"value": "b",
											"description": "b: paket, s: tek Ã¼rÃ¼n"
										},
										{
											"key": "currency",
											"value": "KOIN",
											"description": "KOÄ°N, TRY"
										},
										{
											"key": "group",
											"value": "<integer>",
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r."
										}
									]
								},
								"description": "Use this endpoint to list all questiones suggested by the player."
							},
							"response": [
								{
									"id": "68b1be84-562b-4a66-8935-08ab26edf261",
									"name": "Successful response returns a collection of product models\n(https://docs.bonetwork.co/bilgisavasi/playertagstatitem)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "0b0277cb-75a4-4d66-9cb1-0aacf013389d",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "4b48e1f7-c052-46b3-94a4-1ff5f71da00d",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "5ef15c7c-68d9-4ac2-bba3-1a3dfb2cda14",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "c82150b8-6cf5-47c2-b790-aec418223f12"
				}
			],
			"id": "2c12a5d4-e39f-481e-959f-f441b21caaae"
		},
		{
			"name": "product",
			"item": [
				{
					"name": "{sku}",
					"item": [
						{
							"name": "Retrieve Product by SKU",
							"id": "f0064a0b-c63f-4177-8f98-81f83c333df2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product/:sku",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":sku"
									],
									"variable": [
										{
											"key": "sku",
											"value": "<string>",
											"description": "(Required) Sku of the product to be fetched."
										}
									]
								},
								"description": "This endpoint returnrs details of a requested product."
							},
							"response": [
								{
									"id": "42a71e05-c8ad-4e78-99b9-66caacd07da9",
									"name": "Successful response returns Product model.\n(https://docs.bonetwork.co/bilgisavasi/product)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "1f95b6ab-1f31-4dca-836d-001a1ce2c9eb",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "c6bce07b-184d-4e02-b7a3-1ee356c3b20e",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "2f40d862-37f3-4eda-83e7-2499b46dc60d",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "cdd7c4b6-9a08-4b75-b2be-02e4f4501df7"
				}
			],
			"id": "35b12386-a23b-4dcd-bc3d-ddf81bd94b3a"
		},
		{
			"name": "sync",
			"item": [
				{
					"name": "game-center",
					"item": [
						{
							"name": "{gcCode}",
							"item": [
								{
									"name": "player",
									"item": [
										{
											"name": "{gcPlayerId}",
											"item": [
												{
													"name": "Synchronize With Game Center Data",
													"id": "dea2fbb7-a5d8-4917-a5c6-426fb0a4e64e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sync",
																"game-center",
																":gcCode",
																"player",
																":gcPlayerId"
															],
															"variable": [
																{
																	"key": "gcCode",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "gcPlayerId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														},
														"description": "This endpoint is used to sync user data from related game center into matching player using player's game center id.\n\nNOTE that if the current session's player is different than the player connected to the supplied game center player id, error will occur. "
													},
													"response": [
														{
															"id": "bacf9a14-9c2c-4d08-86be-34d98e37d412",
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "5a025e92-0460-4252-9b15-1e09da579e02",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "6de7349a-299b-41be-a811-cad99fc16f56",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "da67cb2f-aa43-49ba-a89b-dae871e3cb42",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "eba45238-2772-42c3-8342-6c56c1b13f00"
										}
									],
									"id": "5e96562e-1026-45ec-978e-9a0d2b892e39"
								}
							],
							"id": "53ef3857-16cf-47ef-a969-785d5f3ec74f"
						}
					],
					"id": "de3f97e5-c9ef-4d4e-9dda-53f98a7385cb"
				}
			],
			"id": "7b297d46-935c-4f1f-8793-c079662c882a"
		},
		{
			"name": "leaderboards",
			"item": [
				{
					"name": "List PvP Leaderboards",
					"id": "c60eb50d-d504-4ffa-8305-e3e1f045b4c0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leaderboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leaderboards"
							]
						},
						"description": "Use this endpoint to list the defined leaderboards and their meta information."
					},
					"response": [
						{
							"id": "4c6ea5cf-ce8f-44c8-aeb6-fc1d2b8f79a3",
							"name": "Result set holds a list of Leaderboard models. (https://docs.bonetwork.co/bilgisavasi/leaderboard)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "eac0f94d-4344-4205-91c8-653928f987c7",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "daa3e3d0-dbd5-4408-b013-405da38aa9b4",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "8b5135eb-e6ca-4db3-a727-30485919dedb",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"8lK3Nn894WIz.0UGYIhLIv9\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "72c90ebe-a697-4017-ad48-7af0445ef6b0"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Application's API Key.",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "49ee4b05-8afd-4d5a-bce3-0a11f616161d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f8168bd8-6fc6-45b0-b008-a7ed3b40f923",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4287f386-b2a7-49e0-9a56-1abc7169f867",
			"key": "baseUrl",
			"value": "{{url}}"
		}
	]
}