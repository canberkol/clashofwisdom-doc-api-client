{
	"info": {
		"_postman_id": "9e76353a-6426-4827-a2dd-d13deef5facd",
		"name": "Clash of Wisdom REST API",
		"description": "Clash of Wisdom is a PvP trivia game created by Ravio Games. This documentation provides information only for developers who are building functionality in iOS, Android and other channels.\n\nContact Support:\n Name: Raviosoft, A.Åž.\n Email: info@raviosoft.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3114939-9e76353a-6426-4827-a2dd-d13deef5facd"
	},
	"item": [
		{
			"name": "gameplays",
			"item": [
				{
					"name": "finalize",
					"item": [
						{
							"name": "Finalize Played Games",
							"id": "f209fa6a-0e58-4954-8c6c-03ff0be05797",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"email\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"off\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"email\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"t\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/gameplays/finalize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gameplays",
										"finalize"
									]
								},
								"description": "Use this endpoint to send the final score of one or more ended games to the server.\n\n**Flow Diagram**:\n![Flow Diagram](https://s3.eu-central-1.amazonaws.com/docs.bonetwork.co/apps/bilgisavasi/openapi/flows/get.gameplays.finalize.png)"
							},
							"response": [
								{
									"id": "32ea7e2e-f30f-4417-be74-2c13ecd038fe",
									"name": "This standard response is returned in cases where there is nothing actually to returnto the client. ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"email\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"off\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"email\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"t\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "c22999b1-4a1a-4846-b55b-a086f11803e7",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"email\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"off\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"email\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"t\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "59051a0a-d187-4c2a-84a9-2bc8aa4bbcc8",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"email\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"off\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"email\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"t\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "e36f3c8c-56aa-473e-8eec-01a167b7c470",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"email\",\n          \"marketingNotifications\": \"email\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"email\",\n          \"legalNotifications\": \"push\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"l\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"music\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"technology\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  },\n  {\n    \"player\": {\n      \"uuid\": \"<uuid>\",\n      \"alias\": \"<string>\",\n      \"avatar\": \"<string>\",\n      \"levelSummary\": {\n        \"currentLevel\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"pointsToNextLevel\": \"<integer>\"\n      },\n      \"powerUps\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coins\": \"<integer>\",\n      \"categoryStats\": [\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        },\n        {\n          \"tag\": \"<string>\",\n          \"successRate\": \"<float>\",\n          \"correct\": \"<integer>\",\n          \"incorrect\": \"<integer>\"\n        }\n      ],\n      \"appleId\": \"<uuid>\",\n      \"googleId\": \"<uuid>\",\n      \"settings\": {\n        \"locale\": \"tr-tr\",\n        \"gameEffects\": \"<boolean>\",\n        \"gameMusic\": \"<boolean>\",\n        \"notificationSettings\": {\n          \"leaderboardNotifications\": \"sms\",\n          \"gameResultNotifications\": \"off\",\n          \"marketingNotifications\": \"off\",\n          \"paymentNotifications\": \"email\",\n          \"systemNotifications\": \"push\",\n          \"legalNotifications\": \"email\"\n        }\n      },\n      \"playerStanding\": {\n        \"id\": \"<integer>\",\n        \"year\": \"<integer>\",\n        \"month\": \"<integer>\",\n        \"week\": \"<integer>\",\n        \"division\": \"<integer>\",\n        \"group\": \"<integer>\",\n        \"league\": \"<integer>\",\n        \"title\": \"<string>\",\n        \"weekTitle\": \"<string>\",\n        \"endsAt\": \"<dateTime>\",\n        \"standing\": {\n          \"player\": {\n            \"uuid\": \"<uuid>\",\n            \"alias\": \"<string>\",\n            \"avatar\": \"<string>\"\n          },\n          \"currentRank\": \"<integer>\",\n          \"accumulatedPoints\": \"<integer>\",\n          \"accumlatedScore\": \"<integer>\",\n          \"zoneCode\": \"promotion\",\n          \"totalPlayers\": \"<integer>\",\n          \"rewardInfo\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"handle\": \"<string>\"\n      }\n    },\n    \"lastAnsweredQuestion\": \"<integer>\",\n    \"correctAnswers\": \"<integer>\",\n    \"powerUpsUsed\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coinsAccumulated\": \"<integer>\",\n    \"coinsInsured\": 0,\n    \"lastInsuranceCheckpoint\": \"<integer>\",\n    \"startedAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"winStatus\": \"t\",\n    \"points\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerUpsEarned\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"playerAnswers\": [\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"e\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"religion\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"history\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"a\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"r\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"c\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"movies\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"p\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"d\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"culture\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"status\": \"a\",\n        \"questionIdx\": \"<integer>\",\n        \"selectedChoice\": \"b\",\n        \"isCorrect\": \"<boolean>\",\n        \"powerUpsUsed\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"question\": {\n          \"id\": \"<integer>\",\n          \"question\": \"<string>\",\n          \"bannerImage\": \"<string>\",\n          \"choices\": [\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"isCorrect\": \"<boolean>\",\n              \"answerCount\": \"<integer>\"\n            }\n          ],\n          \"difficultyLevel\": \"<integer>\",\n          \"duration\": \"<integer>\",\n          \"tag\": \"geography\",\n          \"rewards\": {\n            \"coins\": \"<integer>\",\n            \"experience\": \"<integer>\",\n            \"score\": \"<integer>\",\n            \"powerups\": {\n              \"life\": \"<integer>\",\n              \"joker\": \"<integer>\",\n              \"fiftyFifty\": \"<integer>\",\n              \"majority\": \"<integer>\",\n              \"insurance\": \"<integer>\",\n              \"immortality\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              },\n              \"immunity\": {\n                \"isActive\": \"<boolean>\",\n                \"validUntil\": \"<dateTime>\"\n              }\n            }\n          }\n        },\n        \"powerUpsEarned\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        },\n        \"coinsEarned\": \"<integer>\",\n        \"timeSpent\": \"<integer>\",\n        \"scoreEarned\": \"<integer>\",\n        \"experienceEarned\": \"<integer>\",\n        \"askedAt\": \"<dateTime>\",\n        \"answeredAt\": \"<dateTime>\"\n      }\n    ],\n    \"game\": \"<integer>\",\n    \"experienceEarned\": \"<integer>\",\n    \"status\": \"s\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplays/finalize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"finalize"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "44fda6bf-4de9-4481-ba94-9b6f586ba3de"
				},
				{
					"name": "load",
					"item": [
						{
							"name": "{gameType}",
							"item": [
								{
									"name": "Retrieve Multiple Solo Games",
									"id": "b1b1fb36-7598-4d8b-91d9-fd3dfb46ca46",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplays",
												"load",
												":gameType"
											],
											"query": [
												{
													"key": "count",
													"value": "<integer>",
													"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10"
												}
											],
											"variable": [
												{
													"key": "gameType",
													"value": "solo",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to start a game for player. If you provide a count that is greater than 1 then you can get more games at once and use them as a precache to speed up new game starting process.\n\n!!! NOTE: Currently only std10 game type is accepted."
									},
									"response": [
										{
											"id": "dcf8318f-c340-4f64-8ecb-301dd1841330",
											"name": "This standard response is returned when a list of games are requested.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "e8c49d9f-a743-4d8b-b1b1-34b45e67f67f",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "ca1cb17e-1c01-49fa-998a-fee84d147919",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "18111c0c-93db-4892-9237-ba1b16cc3115",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplays/load/:gameType?count=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplays",
														"load",
														":gameType"
													],
													"query": [
														{
															"description": "Number of items to be returned. No more than 50 items can be returned at one query.\n\n**Example:**\n?count=10",
															"key": "count",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "bc2b4bd8-1d36-4ec5-b487-bcccf7371d92"
						}
					],
					"id": "daa9fb63-6650-4787-8e0b-f1a9ea6d045b"
				}
			],
			"id": "c9355677-384f-427e-80f7-691f0d249126"
		},
		{
			"name": "gameplay",
			"item": [
				{
					"name": "result",
					"item": [
						{
							"name": "{gameplayId}",
							"item": [
								{
									"name": "Get Result of a Gameplay",
									"id": "f576b0ab-3438-4d99-9376-71653c3fadce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"result",
												":gameplayId"
											],
											"variable": [
												{
													"key": "gameplayId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to check the end result of a game play. This endpoint must be used if game result is not provided after calling POST :: /gameplay/progress/init endpoint."
									},
									"response": [
										{
											"id": "c9933652-7fda-4aa6-8024-9eba1a843e87",
											"name": "Whenever a PvP game result is submitted, this style of response is returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "cae6abb9-d9c3-45d5-852c-5d5f98e8f979",
											"name": "This response is returned for all unauthorized access attempts",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5ba4d5f4-0fe1-4679-97bc-139489500042",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "130e7fe3-b71b-40cc-8714-be4ec22cced1",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/result/:gameplayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"result",
														":gameplayId"
													],
													"variable": [
														{
															"key": "gameplayId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "5459d7fe-b907-406f-acea-c53453835ac2"
						}
					],
					"id": "8b60dbe5-5c3d-46ae-b733-4a68d1868897"
				},
				{
					"name": "init",
					"item": [
						{
							"name": "{gameType}",
							"item": [
								{
									"name": "Match with PVP Opponent",
									"id": "3530b67a-4203-43d4-9bc7-79b43b6fdcb1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/init/:gameType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"init",
												":gameType"
											],
											"variable": [
												{
													"key": "gameType",
													"value": "pvp",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to request a PVP game \"match request id\". When this request reaches the server, the server creates a match request id and it returns this id as result set of the response. The request is queued and handled asynchronously. Therefore a second call is needed to be made with the request id provided from this endpoint to start the game play."
									},
									"response": [
										{
											"id": "b45c1aa4-9cab-44d4-8ccf-5db3f66a0ca0",
											"name": "Returns \"match request id\".",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "cefdb479-f199-4d46-9899-7c36920da0d5",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "cb73e239-4829-4915-bcac-5c95b63395a9",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "dcb55717-8448-43cc-af08-e1ecddd55b7b",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/init/:gameType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"init",
														":gameType"
													],
													"variable": [
														{
															"key": "gameType"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "e21fcd21-337c-4d1a-919f-3d4960903257"
						}
					],
					"id": "2965ae4a-d9bd-4b61-9e84-1f1a77d08eb4"
				},
				{
					"name": "start",
					"item": [
						{
							"name": "{requestId}",
							"item": [
								{
									"name": "Start a PVP Game",
									"id": "f61b980c-51b4-47bf-8e8a-aa59d8d14a40",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/gameplay/start/:requestId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"start",
												":requestId"
											],
											"variable": [
												{
													"key": "requestId",
													"value": "<uuid>",
													"description": "(Required) Match reqest id."
												}
											]
										},
										"description": "Use this endpoint to start/load a PVP game for a given request id. For this endpoint to function the gameplay progress of the request id must belong to the authenticated player. The result set of the response is a \"PvpMatch\" model (https://docs.bonetwork.co/bilgisavasi/pvpmatch)."
									},
									"response": [
										{
											"id": "cb08e2fa-23fb-41e8-b313-310104935d98",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "9228444f-d97e-4100-8b40-75160236a362",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "7d58a930-5b0b-45f2-8853-6c0bb34cab65",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "379c6315-d752-4fff-a290-1ef3bb6b8a27",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/start/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														"start",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "05470f89-4f51-48fd-8783-47aed338da7a"
						}
					],
					"id": "6e03fbde-98bc-485e-8d73-800d9f2d282d"
				},
				{
					"name": "progress",
					"item": [
						{
							"name": "Register Gameplay Progress of a Player",
							"id": "1943eb67-e807-4bfb-b3e3-3c435623c5bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"tr-tr\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"off\",\n        \"gameResultNotifications\": \"off\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"off\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"w\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/gameplay/progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gameplay",
										"progress"
									]
								},
								"description": "This endpoint is used to register a single gameplay progress. It is mainly used in PVP games to register a player's gameplay progress to the system.\n\n**Flow Diagram**:\n![Flow Diagram](https://s3.eu-central-1.amazonaws.com/docs.bonetwork.co/apps/bilgisavasi/openapi/flows/post.pameplay.progress.png)"
							},
							"response": [
								{
									"id": "17a98f22-9811-4ade-b884-5db092fdbcb1",
									"name": "On success, it returns 200.0000 with PvpResult model (https://docs.bonetwork.co/bilgisavasi/pvpresult). If the opponent is still playing the game is still active and not finalized, then ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"tr-tr\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"off\",\n        \"gameResultNotifications\": \"off\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"off\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"w\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "f691e9d7-97d2-4d8d-b716-66e7f2127c4d",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"tr-tr\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"off\",\n        \"gameResultNotifications\": \"off\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"off\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"w\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "a34b366e-d4c4-4dea-bf5b-1c74c30da6e2",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"tr-tr\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"off\",\n        \"gameResultNotifications\": \"off\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"off\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"w\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "2175c4d5-7a2b-406b-9292-26a50d2110eb",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"player\": {\n    \"uuid\": \"<uuid>\",\n    \"alias\": \"<string>\",\n    \"avatar\": \"<string>\",\n    \"levelSummary\": {\n      \"currentLevel\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"pointsToNextLevel\": \"<integer>\"\n    },\n    \"powerUps\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    },\n    \"coins\": \"<integer>\",\n    \"categoryStats\": [\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      },\n      {\n        \"tag\": \"<string>\",\n        \"successRate\": \"<float>\",\n        \"correct\": \"<integer>\",\n        \"incorrect\": \"<integer>\"\n      }\n    ],\n    \"appleId\": \"<uuid>\",\n    \"googleId\": \"<uuid>\",\n    \"settings\": {\n      \"locale\": \"tr-tr\",\n      \"gameEffects\": \"<boolean>\",\n      \"gameMusic\": \"<boolean>\",\n      \"notificationSettings\": {\n        \"leaderboardNotifications\": \"off\",\n        \"gameResultNotifications\": \"off\",\n        \"marketingNotifications\": \"push\",\n        \"paymentNotifications\": \"off\",\n        \"systemNotifications\": \"push\",\n        \"legalNotifications\": \"email\"\n      }\n    },\n    \"playerStanding\": {\n      \"id\": \"<integer>\",\n      \"year\": \"<integer>\",\n      \"month\": \"<integer>\",\n      \"week\": \"<integer>\",\n      \"division\": \"<integer>\",\n      \"group\": \"<integer>\",\n      \"league\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"weekTitle\": \"<string>\",\n      \"endsAt\": \"<dateTime>\",\n      \"standing\": {\n        \"player\": {\n          \"uuid\": \"<uuid>\",\n          \"alias\": \"<string>\",\n          \"avatar\": \"<string>\"\n        },\n        \"currentRank\": \"<integer>\",\n        \"accumulatedPoints\": \"<integer>\",\n        \"accumlatedScore\": \"<integer>\",\n        \"zoneCode\": \"promotion\",\n        \"totalPlayers\": \"<integer>\",\n        \"rewardInfo\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"handle\": \"<string>\"\n    }\n  },\n  \"lastAnsweredQuestion\": \"<integer>\",\n  \"correctAnswers\": \"<integer>\",\n  \"powerUpsUsed\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coinsAccumulated\": \"<integer>\",\n  \"coinsInsured\": 0,\n  \"lastInsuranceCheckpoint\": \"<integer>\",\n  \"startedAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"winStatus\": \"w\",\n  \"points\": \"<integer>\",\n  \"score\": \"<integer>\",\n  \"powerUpsEarned\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"playerAnswers\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"culture\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"r\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"e\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"c\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"technology\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"b\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"history\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"p\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"a\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"religion\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"a\",\n      \"questionIdx\": \"<integer>\",\n      \"selectedChoice\": \"d\",\n      \"isCorrect\": \"<boolean>\",\n      \"powerUpsUsed\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"question\": {\n        \"id\": \"<integer>\",\n        \"question\": \"<string>\",\n        \"bannerImage\": \"<string>\",\n        \"choices\": [\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"isCorrect\": \"<boolean>\",\n            \"answerCount\": \"<integer>\"\n          }\n        ],\n        \"difficultyLevel\": \"<integer>\",\n        \"duration\": \"<integer>\",\n        \"tag\": \"movies\",\n        \"rewards\": {\n          \"coins\": \"<integer>\",\n          \"experience\": \"<integer>\",\n          \"score\": \"<integer>\",\n          \"powerups\": {\n            \"life\": \"<integer>\",\n            \"joker\": \"<integer>\",\n            \"fiftyFifty\": \"<integer>\",\n            \"majority\": \"<integer>\",\n            \"insurance\": \"<integer>\",\n            \"immortality\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            },\n            \"immunity\": {\n              \"isActive\": \"<boolean>\",\n              \"validUntil\": \"<dateTime>\"\n            }\n          }\n        }\n      },\n      \"powerUpsEarned\": {\n        \"life\": \"<integer>\",\n        \"joker\": \"<integer>\",\n        \"fiftyFifty\": \"<integer>\",\n        \"majority\": \"<integer>\",\n        \"insurance\": \"<integer>\",\n        \"immortality\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        },\n        \"immunity\": {\n          \"isActive\": \"<boolean>\",\n          \"validUntil\": \"<dateTime>\"\n        }\n      },\n      \"coinsEarned\": \"<integer>\",\n      \"timeSpent\": \"<integer>\",\n      \"scoreEarned\": \"<integer>\",\n      \"experienceEarned\": \"<integer>\",\n      \"askedAt\": \"<dateTime>\",\n      \"answeredAt\": \"<dateTime>\"\n    }\n  ],\n  \"game\": \"<integer>\",\n  \"experienceEarned\": \"<integer>\",\n  \"status\": \"s\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/gameplay/progress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"gameplay",
												"progress"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "9cc52e78-ba56-4a94-886d-666dce22ad53"
				},
				{
					"name": "{gameplayId}",
					"item": [
						{
							"name": "power-up",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Use Powerup For PVP Gameplay",
											"id": "ecef2553-be52-4c2b-883d-6a409103aa59",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														":gameplayId",
														"power-up",
														":key"
													],
													"query": [
														{
															"key": "qty",
															"value": "<integer>",
															"description": "Quantity of used powerup."
														}
													],
													"variable": [
														{
															"key": "gameplayId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "This endpoint provides us to use powerup for pvp gameplay."
											},
											"response": [
												{
													"id": "10a7e4ea-f4f8-4f3a-a49a-9717fad43042",
													"name": "-",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "cc380941-7eb5-4598-a254-f7026d54e727",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "44847492-dcc6-423a-9642-d3d5ddd61eb1",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "042b738f-1061-4ab4-9dd3-8366aa1cd2b7",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key?qty=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"query": [
																{
																	"description": "Quantity of used powerup.",
																	"key": "qty",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Make An In-Game Power-Up Usage With Purchase",
											"id": "b63bcfef-8d2b-4cb0-bc6d-26c171ce4481",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"gameplay",
														":gameplayId",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "gameplayId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint when the player wants to make an \"in gameplay\" purchase of a powerup."
											},
											"response": [
												{
													"id": "aecea585-133a-4971-a4a2-85075ea78bf5",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "98e79f9f-b4c7-4a66-8019-387b34e57dd1",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "854e2de8-6075-46fe-acd8-6f98387a3642",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e80fd744-5828-4107-bfd6-7cdf324bc952",
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/gameplay/:gameplayId/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"gameplay",
																":gameplayId",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "gameplayId"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												}
											]
										}
									],
									"id": "441e41e9-757a-427a-b3bd-33955b0fee6c"
								}
							],
							"id": "efe3edc0-4a48-4fd3-8ef9-f82b11a6a43c"
						}
					],
					"id": "1d8e9761-4fbc-47f9-b9d0-814080ed4d5c"
				}
			],
			"id": "0ba97ab8-a5db-4991-9a96-f85b84abcdbf"
		},
		{
			"name": "init",
			"item": [
				{
					"name": "Initialize App",
					"id": "0e225ed8-445d-4ece-9c84-f9a80151c8ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Device-Id",
								"value": "<string>",
								"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory."
							},
							{
								"key": "X-Firebase-Token",
								"value": "<string>",
								"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse."
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/init",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"init"
							]
						},
						"description": "This is the first endpoint you need to use. It provides you environment specifics initialization values. https://docs.bonetwork.co/bilgisavasi/appinit"
					},
					"response": [
						{
							"id": "7ddadb75-e5fc-4e5f-acfa-1d6780a92b76",
							"name": "If request is susccessful, result set returns AppInit model (https://docs.bonetwork.co/bilgisavasi/appinit(/",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "f78ecd73-02be-4e64-8b7a-47e078cd5370",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "e68cb836-b947-4ef6-88b3-dd38a99eb35f",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "This is generated & stored in device. It is similar to session token; except, this is generated and saved once into device memory.",
										"key": "X-Device-Id",
										"value": "<string>"
									},
									{
										"description": "This is the unique token generated by Firebase for the device. It must be provided only if there is a value obtained from Firabse.",
										"key": "X-Firebase-Token",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"init"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "906d5272-56c7-4cba-88a4-40bb5c29ecbc"
		},
		{
			"name": "player",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "Login Player",
							"id": "4dbc58a5-2056-4328-83e0-1a612f1afa70",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Player-Id",
										"value": "<uuid>",
										"description": "This should be supplied only if there is a player id available in device memory."
									},
									{
										"key": "X-Device-Id",
										"value": "<uuid>",
										"description": "(Required) This is the device specific id, generated for the user."
									},
									{
										"key": "X-Firebase-Token",
										"value": "<string>",
										"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase."
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/player/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player",
										"login"
									]
								},
								"description": "Use this endpoint to grab a specific player's standard profile information. If id equals to \"null\", the information provided will be equal to the player who is tied to the session token provided in header with key X-Session-Token."
							},
							"response": [
								{
									"id": "a7b3d4ff-c3d1-4fd9-93bb-b07ab3e5e854",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "60cf3832-2f57-4afd-9d33-6e1271413fc1",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "9d8292e7-b453-4556-ba89-d3e965fad6d1",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "90e358a2-a8c9-4884-a78e-db8323e5e1aa",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "This should be supplied only if there is a player id available in device memory.",
												"key": "X-Player-Id",
												"value": "<uuid>"
											},
											{
												"description": "(Required) This is the device specific id, generated for the user.",
												"key": "X-Device-Id",
												"value": "<uuid>"
											},
											{
												"description": "This is the unique identifier supplied for the player/device by Firebase. It must be send only if there is a value obtained from Firebase.",
												"key": "X-Firebase-Token",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "408d5add-0374-410a-a560-d9df20121d26"
				},
				{
					"name": "connect",
					"item": [
						{
							"name": "social",
							"item": [
								{
									"name": "{platform}",
									"item": [
										{
											"name": "Connect Player's Social Account",
											"id": "314a97fa-1bea-4f72-aa02-0599d4ec1ec5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Player-Id",
														"value": "<uuid>",
														"description": "This should be supplied only if there is a player id available in device memory."
													},
													{
														"key": "X-Device-Id",
														"value": "<uuid>",
														"description": "(Required) This is the device specific id, generated for the user."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/connect/social/:platform",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														"connect",
														"social",
														":platform"
													],
													"variable": [
														{
															"key": "platform",
															"value": "google",
															"description": "(Required) Platform can be one of the following: google, apple"
														}
													]
												},
												"description": "Use this endpoint to register a player's social account information and connect her/his social account with her/his game account."
											},
											"response": [
												{
													"id": "36010825-67a8-4d00-9226-4384d079d7e5",
													"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "a920e546-518a-48d0-b858-2bcc4b0f3a69",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "fea5eb66-a084-46e3-abdb-2bae159fe669",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "7ae91021-1efb-44d6-873c-9f682e40f780",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "This should be supplied only if there is a player id available in device memory.",
																"key": "X-Player-Id",
																"value": "<uuid>"
															},
															{
																"description": "(Required) This is the device specific id, generated for the user.",
																"key": "X-Device-Id",
																"value": "<uuid>"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"token\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"avatar\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/player/connect/social/:platform",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																"connect",
																"social",
																":platform"
															],
															"variable": [
																{
																	"key": "platform"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "d7d335ef-d24a-495a-bcfa-77f1f19ebed6"
								}
							],
							"id": "15e1bc2e-85d8-4926-a280-d5ea83499149"
						}
					],
					"id": "a82d6fa3-a470-487b-bc54-14229cc486c1"
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "alias",
							"item": [
								{
									"name": "{newAlias}",
									"item": [
										{
											"name": "Update Player's Alias",
											"id": "ae587007-2f27-42b6-9ca4-ec75b846d1d7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"alias",
														":newAlias"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "newAlias",
															"value": "<string>",
															"description": "(Required) Player's new alias."
														}
													]
												},
												"description": "Use this endpoint to update player's joker count."
											},
											"response": [
												{
													"id": "76a35b4b-8801-4803-b7ed-8589e125e35e",
													"name": "If process is handled successfull \"null\" value returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "876e2d62-9e4f-4e0f-a585-6320bd908ac0",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "4644fa13-4299-4eec-b894-a7a11e99c8c4",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "d1afca4b-cdaf-4db3-88ae-0d30de61a136",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/alias/:newAlias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"alias",
																":newAlias"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "newAlias"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "22cadcc0-3d40-4101-bcb8-7c90845c0dc3"
								}
							],
							"id": "a6d74f64-ae79-41db-bd2e-17406f009cb7"
						},
						{
							"name": "coins",
							"item": [
								{
									"name": "{amount}",
									"item": [
										{
											"name": "Add New Coins to Player",
											"id": "8984c282-7c55-49b1-beff-3996f89d4333",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of coins to add."
														}
													]
												},
												"description": "Use this endpoint to increment player's coin amount by provided amount.\n"
											},
											"response": [
												{
													"id": "8447bf1d-fb88-492e-952b-add9d2cf7e38",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "85aac20f-e6ea-473e-8205-90e6a9115a62",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e7cc5d7e-08df-492c-8ac0-ad943681b840",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "537bbf83-9645-41b2-b9e3-e6bc8828683a",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Remove Coins of Player",
											"id": "187c90dc-729e-4923-97ea-88894bd0b277",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of coins to add."
														}
													]
												},
												"description": "Use this endpoint to decrement player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "d1e289e1-df36-4b22-bb96-aa3dc0dcfcfa",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "09af5c73-c596-4528-9d79-034833c59f7f",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "783ce9af-1552-4659-b02e-2496fba8c879",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "8417a5af-dd09-4755-9a14-2ac69d70b655",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/coins/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"coins",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "83d7b606-cde6-4a6c-ada4-57f145b7655a"
								},
								{
									"name": "Retrieve Player's Coin (Ganimet) Amount",
									"id": "d6107a0e-50fe-4024-a18b-879f2ab2cdbb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/coins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"coins"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "e94c15cd-0505-44e3-b10c-b32cebbc33f7",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "c4318978-8834-407f-904f-50c9ac20bb15",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "f72762cd-3792-4958-ae1a-dbd96cec6c36",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "97434bf5-6514-47a1-a45b-c512b5493a27",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/coins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"coins"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "b67bf484-4f62-407a-b9b6-de1ce7935f5a"
						},
						{
							"name": "experience",
							"item": [
								{
									"name": "{amount}",
									"item": [
										{
											"name": "Add New XP Points to Player",
											"id": "0ca8340a-4e42-4924-b45b-86a15a6aad38",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of experience to add."
														}
													]
												},
												"description": "Use this endpoint to increment player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "9c62f2d7-80a0-4f9e-9181-b6537ac63741",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "deacf6bf-6204-47a0-bb1e-8e068937038d",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "0da7dc60-7609-4113-af0c-325e15653be6",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "c6069f2b-ba0a-41c5-93d1-ab21ed64764a",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Remove XP Points from Player",
											"id": "5b4f9603-9595-47eb-a85d-42346afcdca1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience/:amount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience",
														":amount"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "amount",
															"value": "<string>",
															"description": "(Required) Amount of experience to add."
														}
													]
												},
												"description": "Use this endpoint to decrement player's coin amount by provided amount."
											},
											"response": [
												{
													"id": "7b4ffdc5-a10b-4725-9450-0abc7b262f0e",
													"name": "If process is handled successfully new total value is returned as result.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "b8e406bd-6ff4-49d6-8e8b-c8ab89e0d732",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "961d54cc-de49-470b-8321-0cbd5734a8dd",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "95367068-9483-4e94-a523-145c0ac64548",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/experience/:amount",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"experience",
																":amount"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "amount"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "81e97a50-e19e-4e2d-bee5-49617ea01fef"
								},
								{
									"name": "Retrieve Player's Experience Points",
									"id": "0bfe665a-d843-41d6-b6df-c423c6937a5c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/experience",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"experience"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "98686f87-27c2-47a2-a446-947654983aa1",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "831d94c2-b21c-4c63-9a8a-a670c6aaf6b5",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "401b6afc-65ad-43f1-8e89-76d40b0fe58c",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "3f0803c9-2fdf-4370-afc4-48916244dfb8",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/experience",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"experience"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "7548470e-a446-45fb-854c-3893fed662eb"
						},
						{
							"name": "avatar",
							"item": [
								{
									"name": "Retrieve Player Avatar",
									"id": "1dcf78e8-e680-4e1f-830f-8ca07c7ae089",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"avatar"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to get the path of the current avatar of a player. This information is also a vailable in GET::/player/{id}"
									},
									"response": [
										{
											"id": "548fb7ce-6708-4432-99ed-a77a47c4c087",
											"name": "Successfull response will return URL of the avatar as a value of resukt.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2141c05f-d5c1-400c-a152-3f0161a0ac4b",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "405d1c79-5b0f-4956-8044-189452668469",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "d574bce0-cc70-4b94-9e69-8be664e1438c",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Upload New Avatar",
									"id": "9f0bf29d-1b44-4010-a0c0-93a569c389bf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/player/:id/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"avatar"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to upload a new avatar for the player."
									},
									"response": [
										{
											"id": "38c53659-2eb6-4cc7-99a8-1465463e1532",
											"name": "200 is returned as long as there are no server side fatal errors; however sub-codes differentiate the message.\n\nWhen upload is successful, the path of uploaded file is returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "de47d70b-e5c4-4008-bd3f-90a7c977b424",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5537e244-8344-4111-a40c-f46b8a403f6a",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "d04031dc-125b-4623-a0f5-c39c9a9c356c",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"avatar"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "c9044f8d-3f8a-4bef-9a7c-1413c7ae3e4b"
						},
						{
							"name": "gameplays",
							"item": [
								{
									"name": "pvp",
									"item": [
										{
											"name": "recent",
											"item": [
												{
													"name": "Retrieve Player's Pvp Gameplays",
													"id": "2697df18-590e-46f2-afdf-9d8d238d1acc",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"gameplays",
																"pvp",
																"recent"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Player's uuid."
																}
															]
														},
														"description": "Use this endpoint to get the latest (i.e. last 50) gameplays of a player."
													},
													"response": [
														{
															"id": "b83d5792-9861-4e98-a0ee-5f486d1bfe26",
															"name": "Successful sresponse returns PvpResultSummary model (https://docs.bonetwork.co/bilgisavasi/pvpresultsummary) as value in result.set",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "71a09777-7af7-44f0-ae4b-8ffa0680842a",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "088988bf-26c7-45b6-bf42-2884c34f845a",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "f4395c97-c3d5-4346-81bc-d08f84a04c5f",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player/:id/gameplays/pvp/recent",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player",
																		":id",
																		"gameplays",
																		"pvp",
																		"recent"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "c081bed8-daff-4f54-b8c8-6cf9a8904094"
										}
									],
									"id": "6b8ed903-9504-490f-a326-c58048530a37"
								}
							],
							"id": "632b6b2a-d655-4804-a975-b1f02e71a946"
						},
						{
							"name": "level-info",
							"item": [
								{
									"name": "Retrieve Player's Level Info",
									"id": "f41aa16c-afad-46bb-a038-5c6802950ba9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/level-info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"level-info"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's level related info."
									},
									"response": [
										{
											"id": "156453e0-342b-4ba7-896d-11a6c846f6a8",
											"name": "Successful response returns PlayerLevelSummary model (https://docs.bonetwork.co/bilgisavasi/playerlevelsummary) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5caea7a1-b9e0-4eb4-b34d-721ad29d124e",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "4aa39c70-d397-4916-9e67-a54f07bf73e3",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2bdfefb6-e2fa-4aea-8f4f-25b5bf6f6c98",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/level-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"level-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "ae419cec-f646-44c7-aa83-0ead4dd5314f"
						},
						{
							"name": "life-info",
							"item": [
								{
									"name": "Retrieve Player's Life Info",
									"id": "114065f8-1f18-4331-b36e-03127d3ec3f4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/life-info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"life-info"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Use this endpoint to retrieve user's life info including regeneration counter."
									},
									"response": [
										{
											"id": "9fc56cab-dc16-4cbe-8a26-10c22a286278",
											"name": "Successful response returns LifeInfo model (https://docs.bonetwork.co/bilgisavasi/lifeinfo) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "256a4033-f66e-471f-8596-a0307e494aec",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "10376bc3-076c-4dee-b70a-828d5e24c286",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "faa2617f-3729-490f-b947-037bf9301037",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/life-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"life-info"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "9f3e4f26-784e-4dc7-a8b1-20417a848c37"
						},
						{
							"name": "power-ups",
							"item": [
								{
									"name": "Retrieve Player's Power-ups",
									"id": "9d9697e0-5a9c-4ca7-a0bb-1350462e131c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id/power-ups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"power-ups"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uri>",
													"description": "(Required) Player's uuid."
												}
											]
										},
										"description": "Use this endpoint to get the latest information of a given player's power-up counts."
									},
									"response": [
										{
											"id": "cf12a48e-feff-4397-91fe-500754b11891",
											"name": "Successful response returns PlaywerPowerUps model (https://docs.bonetwork.co/bilgisavasi/ekUX-playerpowerups) as value in result.set.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "236c7697-2986-415e-ac9c-d1a901a1f556",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "7402563b-9737-42f6-b9e4-a4f07f88f609",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "19086930-7f49-4e74-aa6e-9d833963bb79",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-ups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-ups"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "30b74e52-615b-474a-9f98-2b10a7d56e00"
						},
						{
							"name": "power-up",
							"item": [
								{
									"name": "{key}",
									"item": [
										{
											"name": "Retrieve Total Power-Up Count of Player",
											"id": "1379a00b-ec05-41bf-bcbc-cf6e6016f07d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "insurance",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint to get the total number of items that a user possesses for a given power-up.\n\nAvailable keys are:\n- fiftyFifty (integer)\n- immortality (ImmortalityInfo model)\n- immunity (ImmunityInfo model)\n- life (integer)\n- majority (integer)\n- joker (integer)"
											},
											"response": [
												{
													"id": "827faa2c-8d1a-4909-9640-4bc1ccb9327b",
													"name": "Successful response returns ImmortalityInfomodel, ImmunityInfo model or a scalar value  (https://docs.bonetwork.co/bilgisavasi/immortalityinfo, https://docs.bonetwork.co/bilgisavasi/immunityinfo) as value in result.set.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "61464a15-e348-4402-8c67-1a93de2a9160",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "84311023-c114-4b82-85e8-bc20f9036014",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e2f5449e-ed31-4440-aa63-1085b9707614",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Decrement Player's Power-up",
											"id": "bd0667a0-340d-4e82-ae8d-46ffe84b4310",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "insurance",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint if the player decides to user one of her/his power-ups. This endpoint decrements the given power-up of a user by \"one\". If there are no available power-up to use an error will bi returned."
											},
											"response": [
												{
													"id": "e8457e36-7332-4240-972e-db2961408e34",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "39b4ce17-e31b-4b1b-a9ba-1347420f03f5",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "3ac29914-c9b3-4a5d-8fe1-90c9621247b9",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "dc38919f-fe6a-4ff2-81eb-7a62c10e2e88",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Make An In-Game Power-Up Purchase",
											"id": "d394a14f-b88f-4f96-bc83-72dc61d077bc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/power-up/:key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"power-up",
														":key"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uri>",
															"description": "(Required) Player's uuid."
														},
														{
															"key": "key",
															"value": "insurance",
															"description": "(Required) The key of the power-up to grab."
														}
													]
												},
												"description": "Use this endpoint when the player wants to make an \"in gameplay\" purchase of a powerup."
											},
											"response": [
												{
													"id": "7628e9df-331e-45ed-96f4-a3728092f929",
													"name": "200-success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "3aa84742-dd26-4ac6-9f63-17aa443b48cb",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "5775f564-6d1e-4f4f-93fe-160db29db53d",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "03b90519-1f6e-4d03-9aa9-51b484731ea2",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/power-up/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"power-up",
																":key"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "b7931ce9-88bc-4ef3-9ff7-cbc9e52d6ff3"
								}
							],
							"id": "27302d1b-8168-4ecd-8955-e0a2bf51e51e"
						},
						{
							"name": "standing",
							"item": [
								{
									"name": "current",
									"item": [
										{
											"name": "Retrieve Player's Standing Summary",
											"id": "3c1aceb4-71f4-4bee-b897-86641f07f2cd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/standing/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"standing",
														"current"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint to get the standing summary from the player's point of view. This last point only shows the status of the league and rank to which the player belongs."
											},
											"response": [
												{
													"id": "2c81db54-dc21-493e-b311-d976fd07ad21",
													"name": "Successful response returns PlayerLEaderboardStanding model (https://docs.bonetwork.co/bilgisavasi/playerleaderboardstanding) as value in result.set.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "53560e3b-7bed-4aa0-a292-2b4d7906afcf",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "85db4fd8-c5b3-4c90-b7c7-6e65eb244eb1",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "da959bc8-6124-425f-b684-538fac67721c",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/standing/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"standing",
																"current"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "f455d555-1f7f-41f6-9359-0d31dd2afd2d"
								}
							],
							"id": "9336edab-7e5c-4d94-a87f-041428524e72"
						},
						{
							"name": "stats",
							"item": [
								{
									"name": "category-success",
									"item": [
										{
											"name": "Retrieve Player Stats (Category-Success)",
											"id": "b8420632-fc0d-47e3-a744-fb4a45a788c9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/player/:id/stats/category-success",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"stats",
														"category-success"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Use this endpoint to retrieve player's success rates per category. This information is also a vailable in GET::/player/{id}"
											},
											"response": [
												{
													"id": "31090470-829f-4d80-bc52-ce8cf3472871",
													"name": "Successful response returns a collection of PlayerTagStatItemmodel\n(https://docs.bonetwork.co/bilgisavasi/playertagstatitem)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "0f0fc455-11cf-4b9a-af75-c5905f327221",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "2f32b3da-69c9-456c-959e-520a5ae58aaf",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "06a7771e-12dd-44d6-a6dc-464e4e267f20",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/player/:id/stats/category-success",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"player",
																":id",
																"stats",
																"category-success"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "3a981010-7ea5-4113-ad3c-e97dd657c271"
								}
							],
							"id": "d4c038e7-2b6c-4a8d-bb60-8da0a4a6fc15"
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Update Player Settings",
									"id": "651ee505-485f-4d8f-91b1-eed05f832147",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"push\",\n    \"gameResultNotifications\": \"push\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"push\",\n    \"legalNotifications\": \"push\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/player/:id/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id",
												"settings"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Player's id."
												}
											]
										},
										"description": "Use this endpoint to update player's settings (preferences)."
									},
									"response": [
										{
											"id": "32ae0a4e-e625-412e-999b-6f74db20d9b7",
											"name": "Returns up-to-date preferences of player. (PlayerSettings model - https://docs.bonetwork.co/bilgisavasi/playersettings)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"push\",\n    \"gameResultNotifications\": \"push\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"push\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "37a1c6f4-2d99-442c-b3eb-9001ce3f5ce6",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"push\",\n    \"gameResultNotifications\": \"push\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"push\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "4053daf9-6e83-4291-a034-63363659fff6",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"push\",\n    \"gameResultNotifications\": \"push\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"push\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "0831b6d8-c3bd-4d01-8640-bbd084382e34",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"locale\": \"en-us\",\n  \"gameEffects\": \"<boolean>\",\n  \"gameMusic\": \"<boolean>\",\n  \"notificationSettings\": {\n    \"leaderboardNotifications\": \"push\",\n    \"gameResultNotifications\": \"push\",\n    \"marketingNotifications\": \"off\",\n    \"paymentNotifications\": \"email\",\n    \"systemNotifications\": \"push\",\n    \"legalNotifications\": \"push\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/player/:id/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"player",
														":id",
														"settings"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "27cbceec-9516-46eb-b7d2-eb6d81c9107b"
						},
						{
							"name": "Retrieve Player Details",
							"id": "20a67f5e-5cac-45e1-813e-ee35f11cfba2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/player/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) You can supply one of the following:\n\n- uuid (Bilgi SavaÃ…Å¸Ã„Â± Registration Id)\n- Game Center Id (obtained from Apple or Google game centers)"
										}
									]
								},
								"description": "Use this endpoint to grab a specific player's standard profile information. If id equals to \"null\", the information provided will be equal to the player who is tied to the session token provided in header with key X-Session-Token."
							},
							"response": [
								{
									"id": "24c81ec2-b352-46bc-a2e1-d26dd8c94cb8",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "015c2ed1-b339-49c2-8dee-c1aae5808402",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "73007570-8868-44af-82cb-f8539b7df4e1",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "c9975fb4-3859-4c51-99bd-1b2871539ea7",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/player/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"player",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "372af204-53e9-427b-bc86-9082dc823052"
				},
				{
					"name": "Register New Player",
					"id": "b18f5f0a-1ce0-436f-a857-e76442533aac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"sms\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"off\",\n      \"paymentNotifications\": \"push\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"push\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"promotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/player",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"player"
							]
						},
						"description": "Use this endpoint to create a new player record, if you cannot find a matching player record."
					},
					"response": [
						{
							"id": "d4d5704d-7418-4bf6-a26c-3e0688371b6d",
							"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"sms\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"off\",\n      \"paymentNotifications\": \"push\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"push\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"promotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "750a6934-2112-47c6-9e4c-b13c6c4a5c07",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"sms\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"off\",\n      \"paymentNotifications\": \"push\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"push\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"promotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "fec998ed-525c-425f-80c2-cfd6dbfbb4e0",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"sms\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"off\",\n      \"paymentNotifications\": \"push\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"push\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"promotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "63c200bd-01c2-4ec6-ba8f-c4376fbc989a",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uuid\": \"<uuid>\",\n  \"alias\": \"<string>\",\n  \"avatar\": \"<string>\",\n  \"levelSummary\": {\n    \"currentLevel\": \"<integer>\",\n    \"accumulatedPoints\": \"<integer>\",\n    \"pointsToNextLevel\": \"<integer>\"\n  },\n  \"powerUps\": {\n    \"life\": \"<integer>\",\n    \"joker\": \"<integer>\",\n    \"fiftyFifty\": \"<integer>\",\n    \"majority\": \"<integer>\",\n    \"insurance\": \"<integer>\",\n    \"immortality\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    },\n    \"immunity\": {\n      \"isActive\": \"<boolean>\",\n      \"validUntil\": \"<dateTime>\"\n    }\n  },\n  \"coins\": \"<integer>\",\n  \"categoryStats\": [\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    },\n    {\n      \"tag\": \"<string>\",\n      \"successRate\": \"<float>\",\n      \"correct\": \"<integer>\",\n      \"incorrect\": \"<integer>\"\n    }\n  ],\n  \"appleId\": \"<uuid>\",\n  \"googleId\": \"<uuid>\",\n  \"settings\": {\n    \"locale\": \"tr-tr\",\n    \"gameEffects\": \"<boolean>\",\n    \"gameMusic\": \"<boolean>\",\n    \"notificationSettings\": {\n      \"leaderboardNotifications\": \"sms\",\n      \"gameResultNotifications\": \"push\",\n      \"marketingNotifications\": \"off\",\n      \"paymentNotifications\": \"push\",\n      \"systemNotifications\": \"off\",\n      \"legalNotifications\": \"push\"\n    }\n  },\n  \"playerStanding\": {\n    \"id\": \"<integer>\",\n    \"year\": \"<integer>\",\n    \"month\": \"<integer>\",\n    \"week\": \"<integer>\",\n    \"division\": \"<integer>\",\n    \"group\": \"<integer>\",\n    \"league\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"weekTitle\": \"<string>\",\n    \"endsAt\": \"<dateTime>\",\n    \"standing\": {\n      \"player\": {\n        \"uuid\": \"<uuid>\",\n        \"alias\": \"<string>\",\n        \"avatar\": \"<string>\"\n      },\n      \"currentRank\": \"<integer>\",\n      \"accumulatedPoints\": \"<integer>\",\n      \"accumlatedScore\": \"<integer>\",\n      \"zoneCode\": \"promotion\",\n      \"totalPlayers\": \"<integer>\",\n      \"rewardInfo\": {\n        \"coins\": \"<integer>\",\n        \"experience\": \"<integer>\",\n        \"score\": \"<integer>\",\n        \"powerups\": {\n          \"life\": \"<integer>\",\n          \"joker\": \"<integer>\",\n          \"fiftyFifty\": \"<integer>\",\n          \"majority\": \"<integer>\",\n          \"insurance\": \"<integer>\",\n          \"immortality\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          },\n          \"immunity\": {\n            \"isActive\": \"<boolean>\",\n            \"validUntil\": \"<dateTime>\"\n          }\n        }\n      }\n    },\n    \"handle\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/player",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"player"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "bdb05dcc-c6ce-425d-a842-a8277fa5c6fb"
		},
		{
			"name": "support",
			"item": [
				{
					"name": "request",
					"item": [
						{
							"name": "question",
							"item": [
								{
									"name": "Submit Trivia Question Related Issue",
									"id": "dc54bed6-3605-4f94-a971-28fede3ab5dc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Player-Id",
												"value": "<uuid>",
												"description": "This should be supplied only if there is a player id available in device memory."
											},
											{
												"key": "X-Device-Id",
												"value": "<uuid>",
												"description": "(Required) This is the device specific id, generated for the user."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"g\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/support/request/question",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"request",
												"question"
											]
										},
										"description": "Use this endpoint to register players' issue requests related to trivia questions."
									},
									"response": [
										{
											"id": "a3024ab6-5ab9-46a8-8d1d-4918d772b63b",
											"name": "If successful, response's result set will return null with a response code of \"200.0000\".",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"g\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "6e01aede-f1e7-47a0-bf5c-45b906363456",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"g\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "ab4a117e-bb37-46b5-a034-e299f3fb70dc",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"g\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "5bbf6dda-60db-4aab-96df-974c09a16729",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"respondedAt\": \"<dateTime>\",\n  \"rewardedAt\": \"<dateTime>\",\n  \"status\": 1,\n  \"player\": \"<uuid>\",\n  \"question\": \"<integer>\",\n  \"playerComments\": \"<string>\",\n  \"issueType\": \"g\",\n  \"issueId\": \"<integer>\",\n  \"response\": \"<string>\",\n  \"rewardInformation\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/request/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"request",
														"question"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "863589cd-c956-498a-9fba-03d3e30c52c0"
						}
					],
					"id": "88b24dfc-5176-4933-9a9c-affc266d8d4c"
				},
				{
					"name": "suggest",
					"item": [
						{
							"name": "question",
							"item": [
								{
									"name": "Suggest New Trivia Question",
									"id": "6a4a1adf-b7b7-455e-8f56-fead3f78a487",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Player-Id",
												"value": "<uuid>",
												"description": "This should be supplied only if there is a player id available in device memory."
											},
											{
												"key": "X-Device-Id",
												"value": "<uuid>",
												"description": "(Required) This is the device specific id, generated for the user."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"movies\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/support/suggest/question",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"support",
												"suggest",
												"question"
											]
										},
										"description": "Use this endpoint to let players suggest new questions.\n"
									},
									"response": [
										{
											"id": "6d51955d-9fe6-40cf-bdff-b06dc7a4f304",
											"name": "If successful, response's result set will return the record id of the added suggestion.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"movies\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "861aa28e-9b35-4d22-aa78-77ce1d8005d7",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"movies\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "3d7d80fd-ba29-4862-9ccb-7c38b142c045",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"movies\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "bab45d43-f241-4b60-8727-19c3fad47b3c",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "This should be supplied only if there is a player id available in device memory.",
														"key": "X-Player-Id",
														"value": "<uuid>"
													},
													{
														"description": "(Required) This is the device specific id, generated for the user.",
														"key": "X-Device-Id",
														"value": "<uuid>"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"question\": \"<string>\",\n  \"bannerImage\": \"<string>\",\n  \"choices\": [\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    },\n    {\n      \"label\": \"<string>\",\n      \"isCorrect\": \"<boolean>\",\n      \"answerCount\": \"<integer>\"\n    }\n  ],\n  \"difficultyLevel\": \"<integer>\",\n  \"duration\": \"<integer>\",\n  \"tag\": \"movies\",\n  \"rewards\": {\n    \"coins\": \"<integer>\",\n    \"experience\": \"<integer>\",\n    \"score\": \"<integer>\",\n    \"powerups\": {\n      \"life\": \"<integer>\",\n      \"joker\": \"<integer>\",\n      \"fiftyFifty\": \"<integer>\",\n      \"majority\": \"<integer>\",\n      \"insurance\": \"<integer>\",\n      \"immortality\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      },\n      \"immunity\": {\n        \"isActive\": \"<boolean>\",\n        \"validUntil\": \"<dateTime>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/support/suggest/question",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"support",
														"suggest",
														"question"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "0d846f2a-5fb5-47c7-8480-37197bc85e9a"
						}
					],
					"id": "6e7e034e-4c5e-4461-b76b-9cbf4b056e97"
				}
			],
			"id": "cb63235c-bf98-4554-a6fe-5b27315b21ed"
		},
		{
			"name": "ad-placement",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Retrieve Ad Placement Details by Code",
							"id": "ef8936f6-52cd-46dd-93c1-7de0b63fa1fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ad-placement/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ad-placement",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "<string>",
											"description": "(Required) Ad placement code must match to one of the entries within the database. Please contact project manager to see which code to use at different screens."
										}
									]
								},
								"description": "Use this endpoint to grab details of a specific ad-placement"
							},
							"response": [
								{
									"id": "db010fea-2c5f-4e92-8dd2-b4d39ce745e0",
									"name": "If successful, response's result set will return Player model (https://docs.bonetwork.co/bilgisavasi/player).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "9dab8dbb-27a2-4c3d-a790-1d4f6ad8c892",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "60c1c450-82ee-48a3-baa2-8ddcad74ef2b",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "00907665-54cd-4a9b-a80c-be30d4482a62",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ad-placement/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ad-placement",
												":code"
											],
											"variable": [
												{
													"key": "code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "3b333abc-6eb5-4dc3-82b4-7cfb2865324e"
				}
			],
			"id": "1b03f120-2923-44c4-a301-6740c131edab"
		},
		{
			"name": "player-standing",
			"item": [
				{
					"name": "{player}",
					"item": [
						{
							"name": "period",
							"item": [
								{
									"name": "{period}",
									"item": [
										{
											"name": "week",
											"item": [
												{
													"name": "{week}",
													"item": [
														{
															"name": "Retrieve Player's Standing Summary by Period and Week",
															"id": "8a5bccee-328a-4e48-a9ae-d9b3868b5781",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"player-standing",
																		":player",
																		"period",
																		":period",
																		"week",
																		":week"
																	],
																	"variable": [
																		{
																			"key": "player",
																			"value": "<uuid>",
																			"description": "(Required) Uuid of the player."
																		},
																		{
																			"key": "period",
																			"value": "<integer>",
																			"description": "(Required) Period in YYYYMM format."
																		},
																		{
																			"key": "week",
																			"value": "<integer>",
																			"description": "(Required) Week number."
																		}
																	]
																},
																"description": "Use this endpoint to get the standing summary of the given player. This endpoint returns information of the player only. The other ranked players within the same leaderboard are not shown. To get a ranking list please see /leaderboard/of/{player}/period/{period}/week/{week} endpoint."
															},
															"response": [
																{
																	"id": "3df7b95d-dc33-4f26-a2a3-524b68bcbfac",
																	"name": "Successful response returns a collection of PlayerLeaderboardStandingmodels\n(https://docs.bonetwork.co/bilgisavasi/playerleaderboardstanding)",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "708ba08a-4303-4558-81c9-e4a8c72706ed",
																	"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "1d071df8-9f2a-49b8-b8a9-5d303d86656b",
																	"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Precondition Failed",
																	"code": 412,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																},
																{
																	"id": "2dd31632-115b-417b-b563-b8eee1e513f7",
																	"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "Application's API Key.",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/player-standing/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"player-standing",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player"
																				},
																				{
																					"key": "period"
																				},
																				{
																					"key": "week"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																}
															]
														}
													],
													"id": "120e3f38-9b57-4e6c-ac5e-82b81a139b3f"
												}
											],
											"id": "5d7c1faf-6910-4ed2-96a7-04560a2b6180"
										}
									],
									"id": "30cfb0cd-5fa1-4041-86a7-edcb373df303"
								}
							],
							"id": "c192221b-70a4-4263-9b70-6f7d9e460d54"
						}
					],
					"id": "047e418e-ffbb-4dfb-a5f9-77d8a99196ec"
				}
			],
			"id": "0c56f997-c995-42e4-8f12-d1de42cc5e2a"
		},
		{
			"name": "rewarded-ad",
			"item": [
				{
					"name": "reward",
					"item": [
						{
							"name": "for",
							"item": [
								{
									"name": "{adPlacementCode}",
									"item": [
										{
											"name": "{networkCode}",
											"item": [
												{
													"name": "Start Reward Log Before Viewing of Ad Placement",
													"id": "6fd102c5-f510-4c8b-96cb-d6da97727947",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rewarded-ad",
																"reward",
																"for",
																":adPlacementCode",
																":networkCode"
															],
															"variable": [
																{
																	"key": "adPlacementCode",
																	"value": "<string>",
																	"description": "(Required) This must match to oe of the ad placement codes stored in database."
																},
																{
																	"key": "networkCode",
																	"value": "ads",
																	"description": "(Required) See https://docs.bonetwork.co/bilgisavasi/ad-network-codes for all available codes."
																}
															]
														},
														"description": "Use this endpoint to create a reward log record before display ad to player."
													},
													"response": [
														{
															"id": "902af3a6-db38-4899-937b-a373f220b1c7",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "37f171de-2da0-4506-b2fc-72db9e1e891b",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "d0f4f4b7-046c-43a4-a3a1-b01cf0914a9e",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "f8952929-ee3d-4fc1-b1b4-af90ac2beef8",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"gameplayId\": \"<integer>\",\n  \"gameType\": \"pvp\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/rewarded-ad/reward/for/:adPlacementCode/:networkCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rewarded-ad",
																		"reward",
																		"for",
																		":adPlacementCode",
																		":networkCode"
																	],
																	"variable": [
																		{
																			"key": "adPlacementCode"
																		},
																		{
																			"key": "networkCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "025b2e17-79ad-43df-96a0-e59d071101fb"
										}
									],
									"id": "e3d44eef-285f-4b2b-9719-b8dd664cfbc7"
								}
							],
							"id": "c8a88100-303b-42af-9c45-c70c51a8c24c"
						},
						{
							"name": "{logId}",
							"item": [
								{
									"name": "Complete Reward Log After Viewing Ad",
									"id": "8aeccc76-92f0-41bb-b1b7-4674c3970cd6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rewarded-ad",
												"reward",
												":logId"
											],
											"variable": [
												{
													"key": "logId",
													"value": "<string>",
													"description": "(Required) Reward log identification number."
												}
											]
										},
										"description": "Use this endpoint to complete an existing reward log which is waiting to close. And also gives rewards of viewing to player."
									},
									"response": [
										{
											"id": "856eb0c7-eabb-4806-8c15-e5b9b05a70a6",
											"name": "Example response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "92a51394-4538-471c-bfe3-79008b8c7222",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "2f7b4f25-d229-4faf-a338-b4a8b6f43bf9",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "767159c1-133e-4853-b487-ef137e794411",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<boolean>\",\n  \"failReason\": \"o\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/rewarded-ad/reward/:logId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rewarded-ad",
														"reward",
														":logId"
													],
													"variable": [
														{
															"key": "logId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "12b70c56-f929-4d03-8427-4b1df3b65739"
						}
					],
					"id": "0c6a6aa1-ca3a-4074-8e3f-1adbecfcc659"
				}
			],
			"id": "7e3a16b8-b2d5-45a9-8c25-6faf50395016"
		},
		{
			"name": "leaderboard",
			"item": [
				{
					"name": "of",
					"item": [
						{
							"name": "{player}",
							"item": [
								{
									"name": "current",
									"item": [
										{
											"name": "Retrieve Player's Current LeaderBoard",
											"id": "05cda5f2-80a0-4512-b1bf-7825e3a11133",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/leaderboard/of/:player/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"leaderboard",
														"of",
														":player",
														"current"
													],
													"variable": [
														{
															"key": "player",
															"value": "<uuid>",
															"description": "(Required) UUID of player."
														}
													]
												},
												"description": "Use this endpoint to show a leaderboard's player rankings for the most active/current leaderboard of the given player."
											},
											"response": [
												{
													"id": "c9d6a961-e39b-4c06-a80b-2dd6a03c666a",
													"name": "Successful response returns LeaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "5e982a57-6b1e-472e-9f8b-294251c2f069",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "cadbda12-ff80-4cfa-8ead-d4a90eefe857",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "6519b861-11ec-44b2-b659-563666a501ac",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/:player/current",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																":player",
																"current"
															],
															"variable": [
																{
																	"key": "player"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "3fa80d85-827a-49bd-8029-677bb228852a"
								},
								{
									"name": "period",
									"item": [
										{
											"name": "{period}",
											"item": [
												{
													"name": "week",
													"item": [
														{
															"name": "{week}",
															"item": [
																{
																	"name": "Retrieve Player's LeaderBoard by Period and Week",
																	"id": "312e1ef9-968d-4b12-b4c4-458afb29f683",
																	"protocolProfileBehavior": {
																		"disableBodyPruning": true
																	},
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"leaderboard",
																				"of",
																				":player",
																				"period",
																				":period",
																				"week",
																				":week"
																			],
																			"variable": [
																				{
																					"key": "player",
																					"value": "<uuid>",
																					"description": "(Required) Player's uuid."
																				},
																				{
																					"key": "period",
																					"value": "<integer>",
																					"description": "(Required) YYYYMM formatted integer which is used to segment standings by year & month."
																				},
																				{
																					"key": "week",
																					"value": "<integer>",
																					"description": "(Required) Week number as integer. Generally an integer between 1 and 53 inclusive. It used to segment standings on a weekly basis."
																				}
																			]
																		},
																		"description": "Use this endpoint to get a leaderboar'S player rankings for the given period and week for the leaderboard that the given player belongs to."
																	},
																	"response": [
																		{
																			"id": "6f4913e8-6864-4db1-a13a-f03efdf99de8",
																			"name": "Successful response returns LEaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "e9cae116-2755-41bb-9b14-1eb1eda45171",
																			"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "54fa30e4-0b9e-493a-bf7b-f6c43f055985",
																			"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Precondition Failed",
																			"code": 412,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		},
																		{
																			"id": "1a79e21f-23af-4391-beaa-a581881a1530",
																			"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: apikey",
																						"key": "Application's API Key.",
																						"value": "<API Key>"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/leaderboard/of/:player/period/:period/week/:week",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"leaderboard",
																						"of",
																						":player",
																						"period",
																						":period",
																						"week",
																						":week"
																					],
																					"variable": [
																						{
																							"key": "player"
																						},
																						{
																							"key": "period"
																						},
																						{
																							"key": "week"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
																		}
																	]
																}
															],
															"id": "cfa87808-9036-4fce-95c1-4810e2115dd1"
														}
													],
													"id": "96ad9495-20b9-4eea-99f8-6de03994dd37"
												}
											],
											"id": "db52a0dd-1803-4128-9498-60503b7bdda0"
										}
									],
									"id": "b36fcde3-482d-458f-9fc4-bf51f963f3ea"
								}
							],
							"id": "71fd7323-2574-4a6b-a868-355e1107e0ec"
						},
						{
							"name": "group",
							"item": [
								{
									"name": "{groupId}",
									"item": [
										{
											"name": "Retrieve Leaderboard By Group Id",
											"id": "311a8ec3-b44d-4b23-a1e7-6c3ba7415be8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=normal",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"leaderboard",
														"of",
														"group",
														":groupId"
													],
													"query": [
														{
															"key": "period",
															"value": "<integer>",
															"description": "Get a specific leaderboard by period. If ommitted current period is returned."
														},
														{
															"key": "week",
															"value": "<integer>",
															"description": "Get a specific leaderboard by week number. If ommitted current week is returned."
														},
														{
															"key": "zoneCode",
															"value": "normal",
															"description": "Use this to get only the list of players located in the given zone of the leaderboard."
														}
													],
													"variable": [
														{
															"key": "groupId",
															"value": "<integer>",
															"description": "(Required) Leaderboard group id."
														}
													]
												},
												"description": "Use this endpoint to get a leaderboar'S player rankings for the given period and week for the leaderboard that the given player belongs to."
											},
											"response": [
												{
													"id": "caa782a4-d2f7-4c6b-b911-52332fab6f1b",
													"name": "Successful response returns LEaderboardScreen model. If Pagination model is filled, the given instructions are for the contents of \"standings\" property. (https://docs.bonetwork.co/bilgisavasi/leaderboardscreen)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=normal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "normal"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "6d8c3c72-5e67-4d65-b918-6a065b635444",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=normal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "normal"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "7a53c664-e525-4604-be3f-d27ee92ee4b2",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=normal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "normal"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "e55d27b7-9270-4a88-976e-5a46e2204e67",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/leaderboard/of/group/:groupId?period=<integer>&week=<integer>&zoneCode=normal",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"leaderboard",
																"of",
																"group",
																":groupId"
															],
															"query": [
																{
																	"description": "Get a specific leaderboard by period. If ommitted current period is returned.",
																	"key": "period",
																	"value": "<integer>"
																},
																{
																	"description": "Get a specific leaderboard by week number. If ommitted current week is returned.",
																	"key": "week",
																	"value": "<integer>"
																},
																{
																	"description": "Use this to get only the list of players located in the given zone of the leaderboard.",
																	"key": "zoneCode",
																	"value": "normal"
																}
															],
															"variable": [
																{
																	"key": "groupId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "a77402fd-8d3d-42d8-8138-a2b0ca7546e0"
								}
							],
							"id": "248af9a1-0854-4872-905e-f07c1860d3bc"
						}
					],
					"id": "ef71627e-a359-4480-acb8-97b7fd25fced"
				}
			],
			"id": "3b445e77-903f-46e2-900a-bb0afc58a5ab"
		},
		{
			"name": "purchase",
			"item": [
				{
					"name": "register",
					"item": [
						{
							"name": "{sku}",
							"item": [
								{
									"name": "{qty}",
									"item": [
										{
											"name": "Register Successful Purchase",
											"id": "bb95dbb6-2b13-4525-ab3f-f3287afbc874",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"register",
														":sku",
														":qty"
													],
													"variable": [
														{
															"key": "sku",
															"value": "<string>",
															"description": "(Required) Stock code of the product."
														},
														{
															"key": "qty",
															"value": "<integer>",
															"description": "(Required) Total quantity purchased."
														}
													]
												},
												"description": "This endpoint is used to register a successfully completed purchase of user. This endpoint logs the user purchase, checks it with the corresponding store and defines the rewards instructed in product definition to player."
											},
											"response": [
												{
													"id": "5336e044-0f86-45e6-b3bb-b6f9a0bc9a04",
													"name": "Successful response returns Transaction model\n(https://docs.bonetwork.co/bilgisavasi/transaction)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "dfe6e288-26cd-48ef-ab92-5ebb9d4c5e12",
													"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "70342612-d258-4643-b311-57b649bd9777",
													"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												},
												{
													"id": "6ac893fd-5eea-49b1-9a96-855bc878fbfb",
													"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "Application's API Key.",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/purchase/register/:sku/:qty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"purchase",
																"register",
																":sku",
																":qty"
															],
															"variable": [
																{
																	"key": "sku"
																},
																{
																	"key": "qty"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
												}
											]
										}
									],
									"id": "340929b4-1848-4829-a392-c1db388631cf"
								}
							],
							"id": "84d12bda-1138-444f-9047-612456262d32"
						}
					],
					"id": "83cb59d5-3209-43f1-9365-44df7f065fe5"
				},
				{
					"name": "from",
					"item": [
						{
							"name": "store",
							"item": [
								{
									"name": "Create a Store Transaction",
									"id": "cff93e6d-f118-42c2-ae40-0de5929aff2d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/purchase/from/store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"purchase",
												"from",
												"store"
											]
										},
										"description": "This endpoint is used to create a new transaction in the database. The transaction must be registered with the status \"w\"."
									},
									"response": [
										{
											"id": "471f1bf9-18ec-4460-82e5-a17883a265b3",
											"name": "Successful response returns Transaction Basic model with the ID number.\n(https://docs.bonetwork.co/bilgisavasi/transactionbasic)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "1c56a726-82ec-4dbe-ba15-5924ceff6416",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "76afb37e-d1dc-4de7-94d0-507721860c3a",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "e73796a8-9acb-43e1-a151-49027f65298d",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<integer>\",\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a Store Transaction",
									"id": "34119d64-ce9a-4fda-bc2c-8987e1757210",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/purchase/from/store",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"purchase",
												"from",
												"store"
											]
										},
										"description": "This endpoint MUST be called once the response from app stores' fetched after a purchase request."
									},
									"response": [
										{
											"id": "ff2e5927-a2f3-431d-a9c9-f106e3b651f8",
											"name": "Successful response returns Transaction Basic model with the ID number.\n(https://docs.bonetwork.co/bilgisavasi/transactionbasic)",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "7b234e2b-1d61-499d-9693-9e6bb83d1a44",
											"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "851677fb-bc7d-4b50-adb8-3b1282f0a769",
											"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Precondition Failed",
											"code": 412,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										},
										{
											"id": "91471875-0583-45fb-8309-33873d1090d2",
											"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "Application's API Key.",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"storeId\": \"<string>\",\n  \"player\": \"<uuid>\",\n  \"product\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"isSuccessful\": \"<boolean>\",\n  \"failReason\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/purchase/from/store",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"purchase",
														"from",
														"store"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "b3faab9b-16e1-4e05-b9fb-73827be372c1"
						}
					],
					"id": "e7e25a12-c8f9-45c8-8eeb-a7a478bad160"
				}
			],
			"id": "681554c3-1937-4c69-bfdc-f9318d5b4901"
		},
		{
			"name": "products",
			"item": [
				{
					"name": "by-group",
					"item": [
						{
							"name": "List Products Grouped by Categories",
							"id": "6f94f699-61c9-4962-81e3-236f0ee8f6d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"by-group"
									],
									"query": [
										{
											"key": "group",
											"value": "<integer>",
											"description": "If provided, only products in specific group will be visible."
										},
										{
											"key": "visibleInStore",
											"value": "yes",
											"description": "If not provided only \"visible\" products will be listed."
										}
									]
								},
								"description": "Use this endpoint to list products grouped by product categories."
							},
							"response": [
								{
									"id": "0c0d0463-b281-4287-a00f-7f77c4f008e9",
									"name": "Successful response returns a collection of ProductGroup models.\n(https://docs.bonetwork.co/bilgisavasi/productgroup)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "74f5df2b-cd97-48f3-b0e8-73d00e388a4a",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "13f6f75d-0b2c-4a9e-b6df-8c746186a86a",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "07e53f74-e602-4070-a79c-be3ef32a42b6",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/by-group?group=<integer>&visibleInStore=yes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"by-group"
											],
											"query": [
												{
													"description": "If provided, only products in specific group will be visible.",
													"key": "group",
													"value": "<integer>"
												},
												{
													"description": "If not provided only \"visible\" products will be listed.",
													"key": "visibleInStore",
													"value": "yes"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "bc758f24-11db-4349-92a8-b2b5d3659746"
				},
				{
					"name": "List Products",
					"id": "5ee08ea9-e25b-428b-8e0c-c1bc3a1bc115",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "packageType",
									"value": "b",
									"description": "b: paket, s: tek Ã¼rÃ¼n"
								},
								{
									"key": "currency",
									"value": "KOIN",
									"description": "KOÄ°N, TRY"
								},
								{
									"key": "group",
									"value": "<integer>",
									"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r."
								}
							]
						},
						"description": "Lists all products by given filters and search criteron."
					},
					"response": [
						{
							"id": "c0b269a8-1b3c-4f5a-8626-649973de1741",
							"name": "Successful response returns a collection of product models\n(https://docs.bonetwork.co/bilgisavasi/product)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "deef39ed-86f2-41ff-b4a8-70c714be1770",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "b257375f-9a0d-4ce8-9995-1102a1763be7",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "86726352-e00b-4e05-b77e-5c69ec3c2920",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"description": "b: paket, s: tek Ã¼rÃ¼n",
											"key": "packageType",
											"value": "b"
										},
										{
											"description": "KOÄ°N, TRY",
											"key": "currency",
											"value": "KOIN"
										},
										{
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
											"key": "group",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "74eb166a-a3e0-4665-9c2f-cbb79688846e"
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "suggested",
					"item": [
						{
							"name": "List Questions Suggested By the Player",
							"id": "cbd6a8d3-a7bd-404f-a383-0fe9d7ba37b9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"questions",
										"suggested"
									],
									"query": [
										{
											"key": "packageType",
											"value": "b",
											"description": "b: paket, s: tek Ã¼rÃ¼n"
										},
										{
											"key": "currency",
											"value": "KOIN",
											"description": "KOÄ°N, TRY"
										},
										{
											"key": "group",
											"value": "<integer>",
											"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r."
										}
									]
								},
								"description": "Use this endpoint to list all questiones suggested by the player."
							},
							"response": [
								{
									"id": "61d7a512-21c1-40a2-bf79-6da88a743bd3",
									"name": "Successful response returns a collection of product models\n(https://docs.bonetwork.co/bilgisavasi/playertagstatitem)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "6ea3c0f7-af7d-45c3-9eb7-2f9ff28f0d43",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "644dfe3a-0cd1-4951-be23-e6ea3ba1cee3",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "b5eef314-cde6-4f94-bb22-0abb10c39c76",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/questions/suggested?packageType=b&currency=KOIN&group=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"questions",
												"suggested"
											],
											"query": [
												{
													"description": "b: paket, s: tek Ã¼rÃ¼n",
													"key": "packageType",
													"value": "b"
												},
												{
													"description": "KOÄ°N, TRY",
													"key": "currency",
													"value": "KOIN"
												},
												{
													"description": "(Required) Bir gruba ait Ã¼rÃ¼nleri sÄ±ralamak iÃ§in kullanÄ±lÄ±r.",
													"key": "group",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "53d2a388-9b88-4aef-80f1-8bb12b6142b8"
				}
			],
			"id": "096a39c7-96b1-4f32-a77d-e26a750300c8"
		},
		{
			"name": "product",
			"item": [
				{
					"name": "{sku}",
					"item": [
						{
							"name": "Retrieve Product by SKU",
							"id": "48cfe5f5-66db-474b-901c-f7ac11074513",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product/:sku",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":sku"
									],
									"variable": [
										{
											"key": "sku",
											"value": "<string>",
											"description": "(Required) Sku of the product to be fetched."
										}
									]
								},
								"description": "This endpoint returnrs details of a requested product."
							},
							"response": [
								{
									"id": "5191103a-78aa-46b2-a2b1-05c61190c193",
									"name": "Successful response returns Product model.\n(https://docs.bonetwork.co/bilgisavasi/product)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "64bba3ac-7244-48b2-9401-c0420970c31a",
									"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "e4eed060-32f3-4f87-907f-6529e2b5aa17",
									"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								},
								{
									"id": "b934c8a5-1a18-4694-b1f7-171cec65a525",
									"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Application's API Key.",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:sku",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":sku"
											],
											"variable": [
												{
													"key": "sku"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "59cc617f-7a65-49ec-acdb-97e426903502"
				}
			],
			"id": "b580f962-f258-4a98-8d4a-1e48b1baccb7"
		},
		{
			"name": "sync",
			"item": [
				{
					"name": "game-center",
					"item": [
						{
							"name": "{gcCode}",
							"item": [
								{
									"name": "player",
									"item": [
										{
											"name": "{gcPlayerId}",
											"item": [
												{
													"name": "Synchronize With Game Center Data",
													"id": "1d4e1645-a4d0-4e58-8a5f-d150272146c9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sync",
																"game-center",
																":gcCode",
																"player",
																":gcPlayerId"
															],
															"variable": [
																{
																	"key": "gcCode",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "gcPlayerId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														},
														"description": "This endpoint is used to sync user data from related game center into matching player using player's game center id.\n\nNOTE that if the current session's player is different than the player connected to the supplied game center player id, error will occur. "
													},
													"response": [
														{
															"id": "5cbebd2e-4b57-47bf-bef1-91e095ea057c",
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "93613f44-79ab-472c-a82b-9a1ff8f7d5a8",
															"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "053636db-426d-449a-af95-50d24a2cad6e",
															"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Precondition Failed",
															"code": 412,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														},
														{
															"id": "eba3e6fa-2737-42de-828b-4f256b6d1ce5",
															"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "Application's API Key.",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"avatar\": \"<string>\",\n  \"email\": \"<string>\",\n  \"alias\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/sync/game-center/:gcCode/player/:gcPlayerId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sync",
																		"game-center",
																		":gcCode",
																		"player",
																		":gcPlayerId"
																	],
																	"variable": [
																		{
																			"key": "gcCode"
																		},
																		{
																			"key": "gcPlayerId"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
														}
													]
												}
											],
											"id": "0160a158-fde3-4690-a6ce-902cb97ad03f"
										}
									],
									"id": "e287c469-46d1-422b-a41d-d0ac1b8a9ec7"
								}
							],
							"id": "ef5a77f7-0b25-4110-a36b-3237a61a3abb"
						}
					],
					"id": "bc4424f7-f06c-40d4-a71b-39eb23ec37e2"
				}
			],
			"id": "220e7fd1-6b19-44e0-9799-659de33680a8"
		},
		{
			"name": "leaderboards",
			"item": [
				{
					"name": "List PvP Leaderboards",
					"id": "8a5bc09a-9cea-4cca-89e6-c7b297c18693",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/leaderboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"leaderboards"
							]
						},
						"description": "Use this endpoint to list the defined leaderboards and their meta information."
					},
					"response": [
						{
							"id": "d98b4b9d-788c-40a1-838f-bdfa7ae219a2",
							"name": "Result set holds a list of Leaderboard models. (https://docs.bonetwork.co/bilgisavasi/leaderboard)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "66e88b0f-e53e-4ac0-81ee-9c91166ed43f",
							"name": "401 responses are returned either if the user is not loggeding or if the user has insufficient privileges.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "04520788-0b2a-455c-aeb7-a4aaa3b8aaae",
							"name": "412 responses are fired if there is a conditional error occured due to malformed requests to API.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						},
						{
							"id": "e73f1aa3-f152-4d31-aa8f-7e480c6c80f7",
							"name": "500 response is returned only if there is an unexpected & unhandled error during the execution of the program.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Application's API Key.",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/leaderboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"leaderboards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": \"0XeukQQ.8SWpz8I\",\n  \"message\": \"<string>\",\n  \"result\": {\n    \"pagination\": {\n      \"isCircular\": \"<boolean>\",\n      \"prevLink\": \"null\",\n      \"nextLink\": \"null\",\n      \"lastLink\": \"null\",\n      \"firstLink\": \"null\",\n      \"totalItems\": 0,\n      \"itemsPerPage\": 10,\n      \"pageCount\": 1,\n      \"currentPage\": 1\n    }\n  },\n  \"sessionToken\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "571fc025-23bf-44c6-8f37-437adb5a8e11"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Application's API Key.",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "16981298-8149-4e10-900c-a8d1ece3d9de",
			"key": "url",
			"value": "https://rest.api.sta.clashofwisdom.com/v1"
		},
		{
			"id": "36394ceb-78dd-4e6c-81bb-fba291ba6372",
			"key": "baseUrl",
			"value": "https://rest.api.sta.clashofwisdom.com/v1"
		}
	]
}